{"version":3,"sources":["actions/index.js","actions/types.js","firebase.js","components/ColorPanel/ColorPanel.js","components/SidePanel/UserPanel.js","components/SidePanel/Channels.js","components/SidePanel/DirectMessages.js","components/SidePanel/Starred.js","components/SidePanel/SidePanel.js","components/Messages/MessagesHeader.js","components/Messages/FileModal.js","components/Messages/ProgressBar.js","components/Messages/MessageForm.js","components/Messages/Message.js","components/Messages/Typing.js","components/Messages/Skeleton.js","components/Messages/Messages.js","components/MetaPanel/MetaPanel.js","components/VideoCalling/VideoCalling.js","components/App.js","components/Auth/Login.js","components/Auth/Register.js","Spinner.js","registerServiceWorker.js","reducers/index.js","index.js"],"names":["setBypass","bool","type","payload","bypass","setCurrentChannel","channel","currentChannel","setPrivateChannel","isPrivateChannel","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ColorPanel","state","modal","primary","secondary","user","props","currentUser","usersRef","database","ref","userColors","removeListener","child","uid","off","addListener","userId","on","snap","unshift","val","setState","handleChangePrimary","color","hex","handleChangeSecondary","handleSaveColors","saveColors","push","update","then","console","log","closeModal","catch","err","error","displayUserColors","colors","length","map","i","Fragment","key","Divider","className","onClick","setColors","style","background","openModal","this","Sidebar","as","Menu","icon","inverted","vertical","visible","width","Button","size","Modal","basic","open","onClose","Header","Content","Segment","Label","content","onChange","Actions","Icon","name","React","Component","connect","primaryColor","secondaryColor","UserPanel","previewImage","croppedImage","blob","uploadedCroppedImage","storageRef","storage","userRef","auth","metadata","contentType","dropdownOptions","text","displayName","disabled","handleSignout","uploadCroppedImage","put","getDownloadURL","downloadURL","changeAvatar","updateProfile","photoURL","avatar","handleChange","event","file","target","files","reader","FileReader","readAsDataURL","addEventListener","result","handleCropImage","avatarEditor","getImageScaledToCanvas","toBlob","imageUrl","URL","createObjectURL","signOut","Grid","Column","Row","padding","margin","floated","Dropdown","trigger","Image","src","spaced","options","Input","fluid","label","centered","stackable","columns","node","image","height","border","scale","Channels","activeChannel","channels","channelName","channelDetails","channelsRef","messagesRef","typingRef","notifications","firstLoad","addListeners","loadedChannels","setFirstChannel","addNotificationListener","channelId","handleNotifications","id","currentChannelId","lastTotal","index","findIndex","notification","total","numChildren","count","lastKnownTotal","removeListeners","forEach","firstChannel","setActiveChannel","addChannel","newChannel","details","createdBy","handleSubmit","preventDefault","isFormValid","value","changeChannel","remove","clearNotifications","updatedNotifications","getNotificationCount","displayChannels","Item","opacity","active","Form","onSubmit","Field","DirectMessages","users","connectedRef","presenceRef","currentUserUid","loadedUsers","set","onDisconnect","addStatusToUser","connected","updatedUsers","reduce","acc","concat","isUserOnline","status","channelData","getChannelId","currentUserId","fontStyle","Starred","starredChannels","starredChannel","channelToRemove","filteredChannels","filter","SidePanel","fixed","fontSize","MessagesHeader","numUniqueUsers","handleSearchChange","searchLoading","handleStar","isChannelStarred","clearing","marginBottom","Subheader","loading","placeholder","FileModal","authorized","addFile","sendFile","uploadFile","isAuthorized","mime","lookup","clearFile","filename","includes","ProgressBar","uploadState","percentUploaded","Progress","percent","progress","indicating","MessageForm","uploadTask","message","errors","emojiPicker","handleKeyDown","keyCode","sendMessage","handleTogglePicker","handleAddEmoji","emoji","oldMessage","newMessage","colonToUnicode","colons","setTimeout","messageInputRef","focus","replace","x","emojiIndex","emojis","unicode","native","createMessage","fileUrl","timestamp","ServerValue","TIMESTAMP","getMessagesRef","getPath","pathToUpload","filePath","uuid","Math","round","bytesTransferred","totalBytes","snapshot","downloadUrl","sendFileMessage","cancel","onSelect","title","onKeyDown","labelPosition","some","Group","widths","isOwnMessage","Message","Comment","Avatar","Author","Metadata","moment","fromNow","hasOwnProperty","isImage","Text","Typing","Skeleton","Messages","privateChannel","privateMessagesRef","messages","messagesLoading","searchTerm","searchResults","typingUsers","listeners","listener","addToListeners","newListener","scrollToBottom","messagesEnd","scrollIntoView","behavior","addMessageListener","addTypingListeners","loadedMessages","countUniqueUsers","countUserPosts","addUserStarsListener","once","data","prevStarred","Object","keys","prevState","starChannel","handleSearchMessages","channelMessages","regex","RegExp","match","uniqueUsers","plural","userPosts","setUserPosts","displayMessages","displayChannelName","displayTypingUsers","display","alignItems","displayMessageSkeleton","Array","_","prevProps","MetaPanel","activeIndex","setActiveIndex","titleProps","newIndex","formatCount","num","displayTopPosters","posts","entries","sort","a","b","List","Description","slice","attached","Accordion","styled","Title","circular","withRouter","history","useState","room","setRoom","setName","call","setCall","password","setPassword","roomName","onMeetingEnd","loadingComponent","containerStyles","textAlign","verticalAlign","maxWidth","stacked","iconPosition","e","marginLeft","Login","email","displayErrors","signInWithEmailAndPassword","signedInUser","handleInputError","inputName","toLowerCase","to","Register","username","passwordConfirmation","isFormEmpty","isPasswordValid","createUserWithEmailAndPassword","createdUser","md5","saveUser","Spinner","Dimmer","Loader","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initialUserState","isLoading","initialChannelState","initialColorsState","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","Root","onAuthStateChanged","setUser","clearUser","exact","path","component","App","RootWithAuth","ReactDOM","render","document","getElementById","process","origin","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"gSAkBaA,EAAY,SAACC,GACxB,MAAO,CACLC,KCjBsB,aDkBtBC,QAAS,CACPC,OAAQH,KAKDI,EAAoB,SAACC,GAChC,MAAO,CACLJ,KCvB+B,sBDwB/BC,QAAS,CACPI,eAAgBD,KAKTE,EAAoB,SAACC,GAChC,MAAO,CACLP,KC/B+B,sBDgC/BC,QAAS,CACPM,sB,uCExBNC,IAASC,cAXY,CACnBC,OAAQ,0CACRC,WAAY,6BACZC,YAAa,kDACbC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAMFT,QAAQ,E,+ECXjBU,EAAU,iKA8EoC,OA9EpC,oCACdC,MAAQ,CACNC,OAAO,EACPC,QAAS,GACTC,UAAW,GACXC,KAAM,EAAKC,MAAMC,YACjBC,SAAUlB,EAASmB,WAAWC,IAAI,SAClCC,WAAY,IACZ,EAYFC,eAAiB,WACf,EAAKX,MAAMO,SAASK,MAAM,GAAD,OAAI,EAAKZ,MAAMI,KAAKS,IAAG,YAAWC,OAC3D,EAEFC,YAAc,SAACC,GACb,IAAIN,EAAa,GACjB,EAAKV,MAAMO,SAASK,MAAM,GAAD,OAAII,EAAM,YAAWC,GAAG,eAAe,SAACC,GAC/DR,EAAWS,QAAQD,EAAKE,OACxB,EAAKC,SAAS,CAAEX,mBAElB,EAEFY,oBAAsB,SAACC,GAAK,OAAK,EAAKF,SAAS,CAAEnB,QAASqB,EAAMC,OAAM,EAEtEC,sBAAwB,SAACF,GAAK,OAAK,EAAKF,SAAS,CAAElB,UAAWoB,EAAMC,OAAM,EAE1EE,iBAAmB,WACb,EAAK1B,MAAME,SAAW,EAAKF,MAAMG,WACnC,EAAKwB,WAAW,EAAK3B,MAAME,QAAS,EAAKF,MAAMG,YAEjD,EAEFwB,WAAa,SAACzB,EAASC,GACrB,EAAKH,MAAMO,SACRK,MAAM,GAAD,OAAI,EAAKZ,MAAMI,KAAKS,IAAG,YAC5Be,OACAC,OAAO,CACN3B,UACAC,cAED2B,MAAK,WACJC,QAAQC,IAAI,gBACZ,EAAKC,gBAENC,OAAM,SAACC,GAAG,OAAKJ,QAAQK,MAAMD,OAChC,EAEFE,kBAAoB,SAACC,GAAM,OACzBA,EAAOC,OAAS,GAChBD,EAAOE,KAAI,SAACjB,EAAOkB,GAAC,OAClB,kBAAC,IAAMC,SAAQ,CAACC,IAAKF,GACnB,kBAACG,EAAA,EAAO,MACR,yBACEC,UAAU,mBACVC,QAAS,kBAAM,EAAKzC,MAAM0C,UAAUxB,EAAMrB,QAASqB,EAAMpB,aAEzD,yBAAK0C,UAAU,gBAAgBG,MAAO,CAAEC,WAAY1B,EAAMrB,UACxD,yBACE2C,UAAU,iBACVG,MAAO,CAAEC,WAAY1B,EAAMpB,oBAKnC,EAEJ+C,UAAY,kBAAM,EAAK7B,SAAS,CAAEpB,OAAO,KAAO,EAEhDgC,WAAa,kBAAM,EAAKZ,SAAS,CAAEpB,OAAO,KAAQ,EAiDjD,OAjDiD,8CApElD,WACMkD,KAAKnD,MAAMI,MACb+C,KAAKpC,YAAYoC,KAAKnD,MAAMI,KAAKS,OAEpC,kCAED,WACEsC,KAAKxC,mBACN,oBA8DD,WACE,MAAkDwC,KAAKnD,MAA/CC,EAAK,EAALA,MAAOC,EAAO,EAAPA,QAASC,EAAS,EAATA,UAAWO,EAAU,EAAVA,WAEnC,OACE,kBAAC0C,EAAA,EAAO,CACNC,GAAIC,IACJC,KAAK,UACLC,UAAQ,EACRC,UAAQ,EACRC,SAAO,EACPC,MAAM,aAEN,kBAACf,EAAA,EAAO,MACR,kBAACgB,EAAA,EAAM,CAACL,KAAK,MAAMM,KAAK,QAAQtC,MAAM,OAAOuB,QAASK,KAAKD,YAC1DC,KAAKd,kBAAkB3B,GAGxB,kBAACoD,EAAA,EAAK,CAACC,OAAK,EAACC,KAAM/D,EAAOgE,QAASd,KAAKlB,YACtC,kBAAC6B,EAAA,EAAMI,OAAM,0BACb,kBAACJ,EAAA,EAAMK,QAAO,KACZ,kBAACC,EAAA,EAAO,CAACZ,UAAQ,GACf,kBAACa,EAAA,EAAK,CAACC,QAAQ,kBACf,kBAAC,IAAY,CACX/C,MAAOrB,EACPqE,SAAUpB,KAAK7B,uBAInB,kBAAC8C,EAAA,EAAO,CAACZ,UAAQ,GACf,kBAACa,EAAA,EAAK,CAACC,QAAQ,oBACf,kBAAC,IAAY,CACX/C,MAAOpB,EACPoE,SAAUpB,KAAK1B,0BAIrB,kBAACqC,EAAA,EAAMU,QAAO,KACZ,kBAACZ,EAAA,EAAM,CAACrC,MAAM,QAAQiC,UAAQ,EAACV,QAASK,KAAKzB,kBAC3C,kBAAC+C,EAAA,EAAI,CAACC,KAAK,cAAc,gBAE3B,kBAACd,EAAA,EAAM,CAACrC,MAAM,MAAMiC,UAAQ,EAACV,QAASK,KAAKlB,YACzC,kBAACwC,EAAA,EAAI,CAACC,KAAK,WAAW,kBAMjC,EA/Ha,CAASC,IAAMC,WAkIhBC,cAAQ,KAAM,CAAE9B,UHnFN,SAAC+B,EAAcC,GACtC,MAAO,CACLlG,KC9CsB,aD+CtBC,QAAS,CACPgG,eACAC,qBG8ESF,CAA6B9E,G,sDCoE7BiF,EAxMA,iKA4GX,OA5GW,oCACbhF,MAAQ,CACNI,KAAM,EAAKC,MAAMC,YACjBL,OAAO,EACPgF,aAAc,GACdC,aAAc,GACdC,KAAM,KACNC,qBAAsB,GACtBC,WAAYhG,EAASiG,UAAU7E,MAC/B8E,QAASlG,EAASmG,OAAOlF,YACzBC,SAAUlB,EAASmB,WAAWC,IAAI,SAClCgF,SAAU,CACRC,YAAa,eAEf,EAEFxC,UAAY,kBAAM,EAAK7B,SAAS,CAAEpB,OAAO,KAAO,EAEhDgC,WAAa,kBAAM,EAAKZ,SAAS,CAAEpB,OAAO,KAAQ,EAElD0F,gBAAkB,iBAAM,CACtB,CACEhD,IAAK,OACLiD,KACE,8CACe,gCAAS,EAAK5F,MAAMI,KAAKyF,cAG1CC,UAAU,GAEZ,CACEnD,IAAK,SACLiD,KAAM,0BAAM9C,QAAS,EAAKI,WAAU,kBAEtC,CACEP,IAAK,UACLiD,KAAM,0BAAM9C,QAAS,EAAKiD,eAAc,eAE3C,EAEDC,mBAAqB,WACnB,MAAgD,EAAKhG,MAA7CqF,EAAU,EAAVA,WAAYE,EAAO,EAAPA,QAASJ,EAAI,EAAJA,KAAMM,EAAQ,EAARA,SAEnCJ,EACGzE,MAAM,iBAAD,OAAkB2E,EAAQ1E,MAC/BoF,IAAId,EAAMM,GACV3D,MAAK,SAACZ,GACLA,EAAKT,IAAIyF,iBAAiBpE,MAAK,SAACqE,GAC9B,EAAK9E,SAAS,CAAE+D,qBAAsBe,IAAe,kBACnD,EAAKC,yBAIb,EAEFA,aAAe,WACb,EAAKpG,MAAMuF,QACRc,cAAc,CACbC,SAAU,EAAKtG,MAAMoF,uBAEtBtD,MAAK,WACJC,QAAQC,IAAI,oBACZ,EAAKC,gBAENC,OAAM,SAACC,GACNJ,QAAQK,MAAMD,MAGlB,EAAKnC,MAAMO,SACRK,MAAM,EAAKZ,MAAMI,KAAKS,KACtBgB,OAAO,CAAE0E,OAAQ,EAAKvG,MAAMoF,uBAC5BtD,MAAK,WACJC,QAAQC,IAAI,0BAEbE,OAAM,SAACC,GACNJ,QAAQK,MAAMD,OAElB,EAEFqE,aAAe,SAACC,GACd,IAAMC,EAAOD,EAAME,OAAOC,MAAM,GAC1BC,EAAS,IAAIC,WAEfJ,IACFG,EAAOE,cAAcL,GACrBG,EAAOG,iBAAiB,QAAQ,WAC9B,EAAK3F,SAAS,CAAE4D,aAAc4B,EAAOI,cAGzC,EAEFC,gBAAkB,WACZ,EAAKC,cACP,EAAKA,aAAaC,yBAAyBC,QAAO,SAAClC,GACjD,IAAImC,EAAWC,IAAIC,gBAAgBrC,GACnC,EAAK9D,SAAS,CACZ6D,aAAcoC,EACdnC,aAIN,EAEFY,cAAgB,WACd1G,EACGmG,OACAiC,UACA3F,MAAK,kBAAMC,QAAQC,IAAI,mBAC3B,EAyFA,OAzFA,mCAED,WAAU,IAAD,OACP,EAAoDmB,KAAKnD,MAAjDI,EAAI,EAAJA,KAAMH,EAAK,EAALA,MAAOgF,EAAY,EAAZA,aAAcC,EAAY,EAAZA,aAC3BJ,EAAiB3B,KAAK9C,MAAtByE,aAER,OACE,kBAAC4C,EAAA,EAAI,CAAC1E,MAAO,CAAEC,WAAY6B,IACzB,kBAAC4C,EAAA,EAAKC,OAAM,KACV,kBAACD,EAAA,EAAKE,IAAG,CAAC5E,MAAO,CAAE6E,QAAS,QAASC,OAAQ,IAE3C,kBAAC5D,EAAA,EAAM,CAACV,UAAQ,EAACuE,QAAQ,OAAO1E,GAAG,MACjC,kBAACoB,EAAA,EAAI,CAACC,KAAK,wCACX,kBAACR,EAAA,EAAOC,QAAO,mBAIjB,kBAACD,EAAA,EAAM,CAAClB,MAAO,CAAE6E,QAAS,UAAYxE,GAAG,KAAKG,UAAQ,GACpD,kBAACwE,EAAA,EAAQ,CACPC,QACE,8BACE,kBAACC,EAAA,EAAK,CAACC,IAAK/H,EAAKkG,SAAU8B,OAAO,QAAQ7B,QAAM,IAC/CnG,EAAKyF,aAGVwC,QAASlF,KAAKwC,sBAMpB,kBAAC7B,EAAA,EAAK,CAACC,OAAK,EAACC,KAAM/D,EAAOgE,QAASd,KAAKlB,YACtC,kBAAC6B,EAAA,EAAMI,OAAM,sBACb,kBAACJ,EAAA,EAAMK,QAAO,KACZ,kBAACmE,EAAA,EAAK,CACJ/D,SAAUpB,KAAKqD,aACf+B,OAAK,EACL1J,KAAK,OACL2J,MAAM,aACN9D,KAAK,iBAEP,kBAACgD,EAAA,EAAI,CAACe,UAAQ,EAACC,WAAS,EAACC,QAAS,GAChC,kBAACjB,EAAA,EAAKE,IAAG,CAACa,UAAQ,GAChB,kBAACf,EAAA,EAAKC,OAAM,CAAC9E,UAAU,0BACpBoC,GACC,kBAAC,IAAY,CACXxE,IAAK,SAACmI,GAAI,OAAM,EAAKzB,aAAeyB,GACpCC,MAAO5D,EACPtB,MAAO,IACPmF,OAAQ,IACRC,OAAQ,GACRC,MAAO,OAIb,kBAACtB,EAAA,EAAKC,OAAM,KACTzC,GACC,kBAACgD,EAAA,EAAK,CACJlF,MAAO,CAAE8E,OAAQ,cACjBnE,MAAO,IACPmF,OAAQ,IACRX,IAAKjD,QAOjB,kBAACpB,EAAA,EAAMU,QAAO,KACXU,GACC,kBAACtB,EAAA,EAAM,CACLrC,MAAM,QACNiC,UAAQ,EACRV,QAASK,KAAK6C,oBAEd,kBAACvB,EAAA,EAAI,CAACC,KAAK,SAAS,kBAGxB,kBAACd,EAAA,EAAM,CAACrC,MAAM,QAAQiC,UAAQ,EAACV,QAASK,KAAK+D,iBAC3C,kBAACzC,EAAA,EAAI,CAACC,KAAK,UAAU,YAEvB,kBAACd,EAAA,EAAM,CAACrC,MAAM,MAAMiC,UAAQ,EAACV,QAASK,KAAKlB,YACzC,kBAACwC,EAAA,EAAI,CAACC,KAAK,WAAW,mBAOnC,EArMY,CAASC,IAAMC,W,yBCCxBqE,EAAQ,iKAmMsC,OAnMtC,oCACZjJ,MAAQ,CACNkJ,cAAe,GACf9I,KAAM,EAAKC,MAAMC,YACjBrB,QAAS,KACTkK,SAAU,GACVC,YAAa,GACbC,eAAgB,GAChBC,YAAajK,EAASmB,WAAWC,IAAI,YACrC8I,YAAalK,EAASmB,WAAWC,IAAI,YACrC+I,UAAWnK,EAASmB,WAAWC,IAAI,UACnCgJ,cAAe,GACfxJ,OAAO,EACPyJ,WAAW,GACX,EAUFC,aAAe,WACb,IAAIC,EAAiB,GACrB,EAAK5J,MAAMsJ,YAAYrI,GAAG,eAAe,SAACC,GACxC0I,EAAehI,KAAKV,EAAKE,OACzB,EAAKC,SAAS,CAAE8H,SAAUS,IAAkB,kBAAM,EAAKC,qBACvD,EAAKC,wBAAwB5I,EAAKyB,SAEpC,EAEFmH,wBAA0B,SAACC,GACzB,EAAK/J,MAAMuJ,YAAY3I,MAAMmJ,GAAW9I,GAAG,SAAS,SAACC,GAC/C,EAAKlB,MAAMf,SACb,EAAK+K,oBACHD,EACA,EAAK/J,MAAMf,QAAQgL,GACnB,EAAKjK,MAAMyJ,cACXvI,OAIN,EAEF8I,oBAAsB,SAACD,EAAWG,EAAkBT,EAAevI,GACjE,IAAIiJ,EAAY,EAEZC,EAAQX,EAAcY,WACxB,SAACC,GAAY,OAAKA,EAAaL,KAAOF,MAGzB,IAAXK,GACEL,IAAcG,IAChBC,EAAYV,EAAcW,GAAOG,MAE7BrJ,EAAKsJ,cAAgBL,EAAY,IACnCV,EAAcW,GAAOK,MAAQvJ,EAAKsJ,cAAgBL,IAGtDV,EAAcW,GAAOM,eAAiBxJ,EAAKsJ,eAE3Cf,EAAc7H,KAAK,CACjBqI,GAAIF,EACJQ,MAAOrJ,EAAKsJ,cACZE,eAAgBxJ,EAAKsJ,cACrBC,MAAO,IAIX,EAAKpJ,SAAS,CAAEoI,mBAChB,EAEFkB,gBAAkB,WAChB,EAAK3K,MAAMsJ,YAAYxI,MACvB,EAAKd,MAAMmJ,SAASyB,SAAQ,SAAC3L,GAC3B,EAAKe,MAAMuJ,YAAY3I,MAAM3B,EAAQgL,IAAInJ,UAE3C,EAEF+I,gBAAkB,WAChB,IAAMgB,EAAe,EAAK7K,MAAMmJ,SAAS,GACrC,EAAKnJ,MAAM0J,WAAa,EAAK1J,MAAMmJ,SAAS5G,OAAS,IACvD,EAAKlC,MAAMrB,kBAAkB6L,GAC7B,EAAKC,iBAAiBD,GACtB,EAAKxJ,SAAS,CAAEpC,QAAS4L,KAE3B,EAAKxJ,SAAS,CAAEqI,WAAW,KAC3B,EAEFqB,WAAa,WACX,MAA2D,EAAK/K,MAAxDsJ,EAAW,EAAXA,YAAaF,EAAW,EAAXA,YAAaC,EAAc,EAAdA,eAAgBjJ,EAAI,EAAJA,KAE5CuC,EAAM2G,EAAY1H,OAAOe,IAEzBqI,EAAa,CACjBf,GAAItH,EACJ+B,KAAM0E,EACN6B,QAAS5B,EACT6B,UAAW,CACTxG,KAAMtE,EAAKyF,YACXU,OAAQnG,EAAKkG,WAIjBgD,EACG1I,MAAM+B,GACNd,OAAOmJ,GACPlJ,MAAK,WACJ,EAAKT,SAAS,CAAE+H,YAAa,GAAIC,eAAgB,KACjD,EAAKpH,aACLF,QAAQC,IAAI,oBAEbE,OAAM,SAACC,GACNJ,QAAQK,MAAMD,OAElB,EAEFgJ,aAAe,SAAC1E,GACdA,EAAM2E,iBACF,EAAKC,YAAY,EAAKrL,QACxB,EAAK+K,cAEP,EAEFvE,aAAe,SAACC,GACd,EAAKpF,SAAS,eAAGoF,EAAME,OAAOjC,KAAO+B,EAAME,OAAO2E,SAClD,EAEFC,cAAgB,SAACtM,GACf,EAAK6L,iBAAiB7L,GACtB,EAAKe,MAAMwJ,UACR5I,MAAM,EAAKZ,MAAMf,QAAQgL,IACzBrJ,MAAM,EAAKZ,MAAMI,KAAKS,KACtB2K,SACH,EAAKC,qBACL,EAAKpL,MAAMrB,kBAAkBC,GAC7B,EAAKoB,MAAMlB,mBAAkB,GAC7B,EAAKkC,SAAS,CAAEpC,aAChB,EAEFwM,mBAAqB,WACnB,IAAIrB,EAAQ,EAAKpK,MAAMyJ,cAAcY,WACnC,SAACC,GAAY,OAAKA,EAAaL,KAAO,EAAKjK,MAAMf,QAAQgL,MAG3D,IAAe,IAAXG,EAAc,CAChB,IAAIsB,EAAoB,YAAO,EAAK1L,MAAMyJ,eAC1CiC,EAAqBtB,GAAOG,MAAQ,EAAKvK,MAAMyJ,cAC7CW,GACAM,eACFgB,EAAqBtB,GAAOK,MAAQ,EACpC,EAAKpJ,SAAS,CAAEoI,cAAeiC,MAEjC,EAEFZ,iBAAmB,SAAC7L,GAClB,EAAKoC,SAAS,CAAE6H,cAAejK,EAAQgL,MACvC,EAEF0B,qBAAuB,SAAC1M,GACtB,IAAIwL,EAAQ,EAQZ,GANA,EAAKzK,MAAMyJ,cAAcmB,SAAQ,SAACN,GAC5BA,EAAaL,KAAOhL,EAAQgL,KAC9BQ,EAAQH,EAAaG,UAIrBA,EAAQ,EAAG,OAAOA,GACtB,EAEFmB,gBAAkB,SAACzC,GAAQ,OACzBA,EAAS5G,OAAS,GAClB4G,EAAS3G,KAAI,SAACvD,GAAO,OACnB,kBAACqE,EAAA,EAAKuI,KAAI,CACRlJ,IAAK1D,EAAQgL,GACbnH,QAAS,kBAAM,EAAKyI,cAActM,IAClCyF,KAAMzF,EAAQyF,KACd1B,MAAO,CAAE8I,QAAS,IAClBC,OAAQ9M,EAAQgL,KAAO,EAAKjK,MAAMkJ,eAEjC,EAAKyC,qBAAqB1M,IACzB,kBAACoF,EAAA,EAAK,CAAC9C,MAAM,OAAO,EAAKoK,qBAAqB1M,IAC/C,KACEA,EAAQyF,UAEb,EAEJ2G,YAAc,gBAAGjC,EAAW,EAAXA,YAAaC,EAAc,EAAdA,eAAc,OAC1CD,GAAeC,GAAc,EAE/BnG,UAAY,kBAAM,EAAK7B,SAAS,CAAEpB,OAAO,KAAO,EAEhDgC,WAAa,kBAAM,EAAKZ,SAAS,CAAEpB,OAAO,KAAQ,EAqDjD,OArDiD,8CAnLlD,WACEkD,KAAKwG,iBACN,kCAED,WACExG,KAAKwH,oBACN,oBA+KD,WACE,MAA4BxH,KAAKnD,MAAzBmJ,EAAQ,EAARA,SAAUlJ,EAAK,EAALA,MAElB,OACE,kBAAC,IAAMyC,SAAQ,KACb,kBAACY,EAAA,EAAKA,KAAI,CAACT,UAAU,QACnB,kBAACS,EAAA,EAAKuI,KAAI,KACR,8BACE,kBAACpH,EAAA,EAAI,CAACC,KAAK,aAAa,aAClB,IAAG,IACTyE,EAAS5G,OAAM,KAAG,kBAACkC,EAAA,EAAI,CAACC,KAAK,MAAM5B,QAASK,KAAKD,aAEpDC,KAAKyI,gBAAgBzC,IAIxB,kBAACrF,EAAA,EAAK,CAACC,OAAK,EAACC,KAAM/D,EAAOgE,QAASd,KAAKlB,YACtC,kBAAC6B,EAAA,EAAMI,OAAM,sBACb,kBAACJ,EAAA,EAAMK,QAAO,KACZ,kBAAC6H,EAAA,EAAI,CAACC,SAAU9I,KAAKgI,cACnB,kBAACa,EAAA,EAAKE,MAAK,KACT,kBAAC5D,EAAA,EAAK,CACJC,OAAK,EACLC,MAAM,kBACN9D,KAAK,cACLH,SAAUpB,KAAKqD,gBAInB,kBAACwF,EAAA,EAAKE,MAAK,KACT,kBAAC5D,EAAA,EAAK,CACJC,OAAK,EACLC,MAAM,oBACN9D,KAAK,iBACLH,SAAUpB,KAAKqD,kBAMvB,kBAAC1C,EAAA,EAAMU,QAAO,KACZ,kBAACZ,EAAA,EAAM,CAACrC,MAAM,QAAQiC,UAAQ,EAACV,QAASK,KAAKgI,cAC3C,kBAAC1G,EAAA,EAAI,CAACC,KAAK,cAAc,QAE3B,kBAACd,EAAA,EAAM,CAACrC,MAAM,MAAMiC,UAAQ,EAACV,QAASK,KAAKlB,YACzC,kBAACwC,EAAA,EAAI,CAACC,KAAK,WAAW,kBAMjC,EAxPW,CAASC,IAAMC,WA2PdC,cAAQ,KAAM,CAAE7F,oBAAmBG,qBAAnC0F,CACboE,GC7PIkD,EAAc,iKA+FhB,OA/FgB,oCAClBnM,MAAQ,CACNkJ,cAAe,GACf9I,KAAM,EAAKC,MAAMC,YACjB8L,MAAO,GACP7L,SAAUlB,EAASmB,WAAWC,IAAI,SAClC4L,aAAchN,EAASmB,WAAWC,IAAI,mBACtC6L,YAAajN,EAASmB,WAAWC,IAAI,aACrC,EAYFkK,gBAAkB,WAChB,EAAK3K,MAAMO,SAASO,MACpB,EAAKd,MAAMsM,YAAYxL,MACvB,EAAKd,MAAMqM,aAAavL,OACxB,EAEF6I,aAAe,SAAC4C,GACd,IAAIC,EAAc,GAClB,EAAKxM,MAAMO,SAASU,GAAG,eAAe,SAACC,GACrC,GAAIqL,IAAmBrL,EAAKyB,IAAK,CAC/B,IAAIvC,EAAOc,EAAKE,MAChBhB,EAAU,IAAIc,EAAKyB,IACnBvC,EAAa,OAAI,UACjBoM,EAAY5K,KAAKxB,GACjB,EAAKiB,SAAS,CAAE+K,MAAOI,QAI3B,EAAKxM,MAAMqM,aAAapL,GAAG,SAAS,SAACC,GACnC,IAAmB,IAAfA,EAAKE,MAAgB,CACvB,IAAMX,EAAM,EAAKT,MAAMsM,YAAY1L,MAAM2L,GACzC9L,EAAIgM,KAAI,GACRhM,EAAIiM,eAAelB,QAAO,SAACrJ,GACb,OAARA,GACFJ,QAAQK,MAAMD,UAMtB,EAAKnC,MAAMsM,YAAYrL,GAAG,eAAe,SAACC,GACpCqL,IAAmBrL,EAAKyB,KAC1B,EAAKgK,gBAAgBzL,EAAKyB,QAI9B,EAAK3C,MAAMsM,YAAYrL,GAAG,iBAAiB,SAACC,GACtCqL,IAAmBrL,EAAKyB,KAC1B,EAAKgK,gBAAgBzL,EAAKyB,KAAK,OAGnC,EAEFgK,gBAAkB,SAAC3L,GAA8B,IAAtB4L,IAAS,yDAC5BC,EAAe,EAAK7M,MAAMoM,MAAMU,QAAO,SAACC,EAAK3M,GAIjD,OAHIA,EAAKS,MAAQG,IACfZ,EAAa,OAAC,UAAMwM,EAAY,SAAW,YAEtCG,EAAIC,OAAO5M,KACjB,IACH,EAAKiB,SAAS,CAAE+K,MAAOS,KACvB,EAEFI,aAAe,SAAC7M,GAAI,MAAqB,WAAhBA,EAAK8M,QAAmB,EAEjD3B,cAAgB,SAACnL,GACf,IACM+M,EAAc,CAClBlD,GAFgB,EAAKmD,aAAahN,EAAKS,KAGvC6D,KAAMtE,EAAKsE,MAEb,EAAKrE,MAAMrB,kBAAkBmO,GAC7B,EAAK9M,MAAMlB,mBAAkB,GAC7B,EAAK2L,iBAAiB1K,EAAKS,MAC3B,EAEFuM,aAAe,SAACpM,GACd,IAAMqM,EAAgB,EAAKrN,MAAMI,KAAKS,IACtC,OAAOG,EAASqM,EAAa,UACtBrM,EAAM,YAAIqM,GAAa,UACvBA,EAAa,YAAIrM,IACxB,EAEF8J,iBAAmB,SAAC9J,GAClB,EAAKK,SAAS,CAAE6H,cAAelI,KAChC,EA6BA,OA7BA,8CArFD,WACMmC,KAAKnD,MAAMI,MACb+C,KAAKwG,aAAaxG,KAAKnD,MAAMI,KAAKS,OAErC,kCAED,WACEsC,KAAKwH,oBACN,oBA+ED,WAAU,IAAD,OACP,EAAiCxH,KAAKnD,MAA9BoM,EAAK,EAALA,MAAOlD,EAAa,EAAbA,cAEf,OACE,kBAAC5F,EAAA,EAAKA,KAAI,CAACT,UAAU,QACnB,kBAACS,EAAA,EAAKuI,KAAI,KACR,8BACE,kBAACpH,EAAA,EAAI,CAACC,KAAK,SAAS,oBACd,IAAG,IACT0H,EAAM7J,OAAM,KAEf6J,EAAM5J,KAAI,SAACpC,GAAI,OACd,kBAACkD,EAAA,EAAKuI,KAAI,CACRlJ,IAAKvC,EAAKS,IACVkL,OAAQ3L,EAAKS,MAAQqI,EACrBpG,QAAS,kBAAM,EAAKyI,cAAcnL,IAClC4C,MAAO,CAAE8I,QAAS,GAAKwB,UAAW,WAElC,kBAAC7I,EAAA,EAAI,CACHC,KAAK,SACLnD,MAAO,EAAK0L,aAAa7M,GAAQ,QAAU,QAC3C,KACCA,EAAKsE,cAKjB,EA5HiB,CAASC,IAAMC,WA+HpBC,cAAQ,KAAM,CAAE7F,oBAAmBG,qBAAnC0F,CACbsH,G,QChIIoB,EAAO,iKAqEP,OArEO,oCACXvN,MAAQ,CACNI,KAAM,EAAKC,MAAMC,YACjBC,SAAUlB,EAASmB,WAAWC,IAAI,SAClCyI,cAAe,GACfsE,gBAAiB,IACjB,EAYF7M,eAAiB,WACf,EAAKX,MAAMO,SAASK,MAAM,GAAD,OAAI,EAAKZ,MAAMI,KAAKS,IAAG,aAAYC,OAC5D,EAEF6I,aAAe,SAAC3I,GACd,EAAKhB,MAAMO,SACRK,MAAMI,GACNJ,MAAM,WACNK,GAAG,eAAe,SAACC,GAClB,IAAMuM,EAAc,aAAKxD,GAAI/I,EAAKyB,KAAQzB,EAAKE,OAC/C,EAAKC,SAAS,CACZmM,gBAAgB,GAAD,mBAAM,EAAKxN,MAAMwN,iBAAe,CAAEC,SAIvD,EAAKzN,MAAMO,SACRK,MAAMI,GACNJ,MAAM,WACNK,GAAG,iBAAiB,SAACC,GACpB,IAAMwM,EAAe,aAAKzD,GAAI/I,EAAKyB,KAAQzB,EAAKE,OAC1CuM,EAAmB,EAAK3N,MAAMwN,gBAAgBI,QAClD,SAAC3O,GACC,OAAOA,EAAQgL,KAAOyD,EAAgBzD,MAG1C,EAAK5I,SAAS,CAAEmM,gBAAiBG,QAErC,EAEF7C,iBAAmB,SAAC7L,GAClB,EAAKoC,SAAS,CAAE6H,cAAejK,EAAQgL,MACvC,EAEFsB,cAAgB,SAACtM,GACf,EAAK6L,iBAAiB7L,GACtB,EAAKoB,MAAMrB,kBAAkBC,GAC7B,EAAKoB,MAAMlB,mBAAkB,IAC7B,EAEFyM,gBAAkB,SAAC4B,GAAe,OAChCA,EAAgBjL,OAAS,GACzBiL,EAAgBhL,KAAI,SAACvD,GAAO,OAC1B,kBAACqE,EAAA,EAAKuI,KAAI,CACRlJ,IAAK1D,EAAQgL,GACbnH,QAAS,kBAAM,EAAKyI,cAActM,IAClCyF,KAAMzF,EAAQyF,KACd1B,MAAO,CAAE8I,QAAS,IAClBC,OAAQ9M,EAAQgL,KAAO,EAAKjK,MAAMkJ,eAAc,KAE7CjK,EAAQyF,UAEb,EAgBH,OAhBG,8CA7DJ,WACMvB,KAAKnD,MAAMI,MACb+C,KAAKwG,aAAaxG,KAAKnD,MAAMI,KAAKS,OAErC,kCAED,WACEsC,KAAKxC,mBACN,oBAuDD,WACE,IAAQ6M,EAAoBrK,KAAKnD,MAAzBwN,gBAER,OACE,kBAAClK,EAAA,EAAKA,KAAI,CAACT,UAAU,QACnB,kBAACS,EAAA,EAAKuI,KAAI,KACR,8BACE,kBAACpH,EAAA,EAAI,CAACC,KAAK,SAAS,YACd,IAAG,IACT8I,EAAgBjL,OAAM,KAEzBY,KAAKyI,gBAAgB4B,QAG3B,EArFU,CAAS7I,IAAMC,WAwFbC,cAAQ,KAAM,CAAE7F,oBAAmBG,qBAAnC0F,CAAwD0I,GCjExDM,EArBA,kHAkBZ,OAlBY,mCACb,WACE,MAAsC1K,KAAK9C,MAAnCC,EAAW,EAAXA,YAAawE,EAAY,EAAZA,aAErB,OACE,kBAACxB,EAAA,EAAI,CACHO,KAAK,QACLL,UAAQ,EACRsK,MAAM,OACNrK,UAAQ,EACRT,MAAO,CAAEC,WAAY6B,EAAciJ,SAAU,WAE7C,kBAAC,EAAS,CAACjJ,aAAcA,EAAcxE,YAAaA,IACpD,kBAAC,EAAO,CAACA,YAAaA,IACtB,kBAAC,EAAQ,CAACA,YAAaA,IACvB,kBAAC,EAAc,CAACA,YAAaA,SAGlC,EAlBY,CAASqE,IAAMC,W,SCwCfoJ,EA7CK,kHA0CjB,OA1CiB,mCAClB,WACE,MAQI7K,KAAK9C,MAPP+I,EAAW,EAAXA,YACA6E,EAAc,EAAdA,eACAC,EAAkB,EAAlBA,mBACAC,EAAa,EAAbA,cACA/O,EAAgB,EAAhBA,iBACAgP,EAAU,EAAVA,WACAC,EAAgB,EAAhBA,iBAGF,OACE,kBAACjK,EAAA,EAAO,CAACkK,UAAQ,GAEf,kBAACpK,EAAA,EAAM,CAACqE,MAAM,OAAOlF,GAAG,KAAK0E,QAAQ,OAAO/E,MAAO,CAAEuL,aAAc,IACjE,8BACGnF,GACChK,GACA,kBAACqF,EAAA,EAAI,CACH3B,QAASsL,EACT1J,KAAM2J,EAAmB,OAAS,eAClC9M,MAAO8M,EAAmB,SAAW,WAI3C,kBAACnK,EAAA,EAAOsK,UAAS,KAAEP,IAIrB,kBAAC/J,EAAA,EAAM,CAAC6D,QAAQ,SACd,kBAACO,EAAA,EAAK,CACJmG,QAASN,EACT5J,SAAU2J,EACVrK,KAAK,OACLN,KAAK,SACLmB,KAAK,aACLgK,YAAY,0BAKrB,EA1CiB,CAAS/J,IAAMC,W,6CC6DpB+J,GA5DA,iKA8BkC,OA9BlC,oCACb3O,MAAQ,CACN0G,KAAM,KACNkI,WAAY,CAAC,aAAc,cAC3B,EAEFC,QAAU,SAACpI,GACT,IAAMC,EAAOD,EAAME,OAAOC,MAAM,GAC5BF,GACF,EAAKrF,SAAS,CAAEqF,UAElB,EAEFoI,SAAW,WACT,IAAQpI,EAAS,EAAK1G,MAAd0G,KACR,EAAmC,EAAKrG,MAAhC0O,EAAU,EAAVA,WAAY9M,EAAU,EAAVA,WAEP,OAATyE,IACE,EAAKsI,aAAatI,EAAKhC,QAEzBqK,EAAWrI,EADM,CAAEhB,YAAauJ,IAAKC,OAAOxI,EAAKhC,QAEjDzC,IACA,EAAKkN,eAGT,EAEFH,aAAe,SAACI,GAAQ,OACtB,EAAKpP,MAAM4O,WAAWS,SAASJ,IAAKC,OAAOE,KAAU,EAEvDD,UAAY,kBAAM,EAAK9N,SAAS,CAAEqF,KAAM,QAAO,EA2B9C,OA3B8C,mCAE/C,WACE,MAA8BvD,KAAK9C,MAA3BJ,EAAK,EAALA,MAAOgC,EAAU,EAAVA,WAEf,OACE,kBAAC6B,EAAA,EAAK,CAACC,OAAK,EAACC,KAAM/D,EAAOgE,QAAShC,GACjC,kBAAC6B,EAAA,EAAMI,OAAM,6BACb,kBAACJ,EAAA,EAAMK,QAAO,KACZ,kBAACmE,EAAA,EAAK,CACJ/D,SAAUpB,KAAK0L,QACftG,OAAK,EACLC,MAAM,uBACN9D,KAAK,OACL7F,KAAK,UAGT,kBAACiF,EAAA,EAAMU,QAAO,KACZ,kBAACZ,EAAA,EAAM,CAACd,QAASK,KAAK2L,SAAUvN,MAAM,QAAQiC,UAAQ,GACpD,kBAACiB,EAAA,EAAI,CAACC,KAAK,cAAc,SAE3B,kBAACd,EAAA,EAAM,CAACrC,MAAM,MAAMiC,UAAQ,EAACV,QAASb,GACpC,kBAACwC,EAAA,EAAI,CAACC,KAAK,WAAW,iBAK/B,EAzDY,CAASC,IAAMC,W,UCWf0K,GAZK,SAAH,OAAMC,EAAW,EAAXA,YAAaC,EAAe,EAAfA,gBAAe,MACjC,cAAhBD,GACE,kBAACE,GAAA,EAAQ,CACP5M,UAAU,gBACV6M,QAASF,EACTG,UAAQ,EACRC,YAAU,EACV/L,KAAK,SACLL,UAAQ,KCgQCqM,GAjQE,iKAyLb,OAzLa,oCACf7P,MAAQ,CACNqF,WAAYhG,EAASiG,UAAU7E,MAC/B+I,UAAWnK,EAASmB,WAAWC,IAAI,UACnCqP,WAAY,KACZP,YAAa,GACbC,gBAAiB,EACjBO,QAAS,GACT9Q,QAAS,EAAKoB,MAAMnB,eACpBkB,KAAM,EAAKC,MAAMC,YACjBmO,SAAS,EACTuB,OAAQ,GACR/P,OAAO,EACPgQ,aAAa,GACb,EASF/M,UAAY,kBAAM,EAAK7B,SAAS,CAAEpB,OAAO,KAAO,EAEhDgC,WAAa,kBAAM,EAAKZ,SAAS,CAAEpB,OAAO,KAAQ,EAElDuG,aAAe,SAACC,GACd,EAAKpF,SAAS,eAAGoF,EAAME,OAAOjC,KAAO+B,EAAME,OAAO2E,SAClD,EAEF4E,cAAgB,SAACzJ,GACO,KAAlBA,EAAM0J,SACR,EAAKC,cAGP,MAA8C,EAAKpQ,MAA3C+P,EAAO,EAAPA,QAASvG,EAAS,EAATA,UAAWvK,EAAO,EAAPA,QAASmB,EAAI,EAAJA,KAEjC2P,EACFvG,EAAU5I,MAAM3B,EAAQgL,IAAIrJ,MAAMR,EAAKS,KAAK4L,IAAIrM,EAAKyF,aAErD2D,EAAU5I,MAAM3B,EAAQgL,IAAIrJ,MAAMR,EAAKS,KAAK2K,UAE9C,EAEF6E,mBAAqB,WACnB,EAAKhP,SAAS,CAAE4O,aAAc,EAAKjQ,MAAMiQ,eACzC,EAEFK,eAAiB,SAACC,GAChB,IAAMC,EAAa,EAAKxQ,MAAM+P,QACxBU,EAAa,EAAKC,eAAe,IAAD,OAAKF,EAAU,YAAID,EAAMI,OAAM,MACrE,EAAKtP,SAAS,CAAE0O,QAASU,EAAYR,aAAa,IAClDW,YAAW,kBAAM,EAAKC,gBAAgBC,UAAS,IAC/C,EAEFJ,eAAiB,SAACX,GAChB,OAAOA,EAAQgB,QAAQ,sBAAsB,SAACC,GAC5CA,EAAIA,EAAED,QAAQ,KAAM,IACpB,IAAIR,EAAQU,IAAWC,OAAOF,GAC9B,GAAqB,qBAAVT,EAAuB,CAChC,IAAIY,EAAUZ,EAAMa,OACpB,GAAuB,qBAAZD,EACT,OAAOA,EAIX,OADAH,EAAI,IAAMA,EAAI,QAGhB,EAEFK,cAAgB,WAAqB,IAApBC,EAAO,uDAAG,KACnBvB,EAAU,CACdwB,UAAWlS,EAASmB,SAASgR,YAAYC,UACzCrR,KAAM,CACJ6J,GAAI,EAAKjK,MAAMI,KAAKS,IACpB6D,KAAM,EAAK1E,MAAMI,KAAKyF,YACtBU,OAAQ,EAAKvG,MAAMI,KAAKkG,WAQ5B,OALgB,OAAZgL,EACFvB,EAAe,MAAIuB,EAEnBvB,EAAiB,QAAI,EAAK/P,MAAM+P,QAE3BA,GACP,EAEFK,YAAc,WACZ,IAAQsB,EAAmB,EAAKrR,MAAxBqR,eACR,EAA8C,EAAK1R,MAA3C+P,EAAO,EAAPA,QAAS9Q,EAAO,EAAPA,QAASmB,EAAI,EAAJA,KAAMoJ,EAAS,EAATA,UAE5BuG,GACF,EAAK1O,SAAS,CAAEoN,SAAS,IACzBiD,IACG9Q,MAAM3B,EAAQgL,IACdrI,OACA6K,IAAI,EAAK4E,iBACTvP,MAAK,WACJ,EAAKT,SAAS,CAAEoN,SAAS,EAAOsB,QAAS,GAAIC,OAAQ,KACrDxG,EAAU5I,MAAM3B,EAAQgL,IAAIrJ,MAAMR,EAAKS,KAAK2K,YAE7CtJ,OAAM,SAACC,GACNJ,QAAQK,MAAMD,GACd,EAAKd,SAAS,CACZoN,SAAS,EACTuB,OAAQ,EAAKhQ,MAAMgQ,OAAOhD,OAAO7K,SAIvC,EAAKd,SAAS,CACZ2O,OAAQ,EAAKhQ,MAAMgQ,OAAOhD,OAAO,CAAE+C,QAAS,qBAGhD,EAEF4B,QAAU,WACR,OAAI,EAAKtR,MAAMjB,iBACP,gBAAN,OAAuB,EAAKY,MAAMf,QAAQgL,IAEnC,eAET,EAEF8E,WAAa,SAACrI,EAAMjB,GAClB,IAAMmM,EAAe,EAAK5R,MAAMf,QAAQgL,GAClCxJ,EAAM,EAAKJ,MAAMqR,iBACjBG,EAAQ,UAAM,EAAKF,UAAS,YAAIG,cAAM,QAE5C,EAAKzQ,SACH,CACEkO,YAAa,YACbO,WAAY,EAAK9P,MAAMqF,WAAWzE,MAAMiR,GAAU5L,IAAIS,EAAMjB,KAE9D,WACE,EAAKzF,MAAM8P,WAAW7O,GACpB,iBACA,SAACC,GACC,IAAMsO,EAAkBuC,KAAKC,MAC1B9Q,EAAK+Q,iBAAmB/Q,EAAKgR,WAAc,KAE9C,EAAK7Q,SAAS,CAAEmO,uBAElB,SAACrN,GACCJ,QAAQK,MAAMD,GACd,EAAKd,SAAS,CACZ2O,OAAQ,EAAKhQ,MAAMgQ,OAAOhD,OAAO7K,GACjCoN,YAAa,QACbO,WAAY,UAGhB,WACE,EAAK9P,MAAM8P,WAAWqC,SAAS1R,IAC5ByF,iBACApE,MAAK,SAACsQ,GACL,EAAKC,gBAAgBD,EAAa3R,EAAKmR,MAExC1P,OAAM,SAACC,GACNJ,QAAQK,MAAMD,GACd,EAAKd,SAAS,CACZ2O,OAAQ,EAAKhQ,MAAMgQ,OAAOhD,OAAO7K,GACjCoN,YAAa,QACbO,WAAY,iBAO1B,EAEFuC,gBAAkB,SAACf,EAAS7Q,EAAKmR,GAC/BnR,EACGG,MAAMgR,GACNhQ,OACA6K,IAAI,EAAK4E,cAAcC,IACvBxP,MAAK,WACJ,EAAKT,SAAS,CAAEkO,YAAa,YAE9BrN,OAAM,SAACC,GACNJ,QAAQK,MAAMD,GACd,EAAKd,SAAS,CACZ2O,OAAQ,EAAKhQ,MAAMgQ,OAAOhD,OAAO7K,SAGxC,EAqEA,OArEA,iDAzKD,WACgC,OAA1BgB,KAAKnD,MAAM8P,aACb3M,KAAKnD,MAAM8P,WAAWwC,SACtBnP,KAAK9B,SAAS,CAAEyO,WAAY,UAE/B,oBAsKD,WAAU,IAAD,OAEP,EAAuF3M,KAAKnD,MAApFgQ,EAAM,EAANA,OAAQD,EAAO,EAAPA,QAAStB,EAAO,EAAPA,QAASxO,EAAK,EAALA,MAAOsP,EAAW,EAAXA,YAAaC,EAAe,EAAfA,gBAAiBS,EAAW,EAAXA,YAEvE,OACE,kBAAC7L,EAAA,EAAO,CAACvB,UAAU,iBAChBoN,GACC,kBAAC,IAAM,CACLxD,IAAI,QACJ8F,SAAUpP,KAAKmN,eACfzN,UAAU,cACV2P,MAAM,kBACNjC,MAAM,aAGV,kBAACjI,EAAA,EAAK,CACJC,OAAK,EACL7D,KAAK,UACLH,SAAUpB,KAAKqD,aACfiM,UAAWtP,KAAK+M,cAChB5E,MAAOyE,EACPtP,IAAK,SAACmI,GAAI,OAAM,EAAKiI,gBAAkBjI,GACvC5F,MAAO,CAAEuL,aAAc,SACvB/F,MACE,kBAAC5E,EAAA,EAAM,CACLL,KAAM0M,EAAc,QAAU,MAC9B3L,QAAS2L,EAAc,QAAU,KACjCnN,QAASK,KAAKkN,qBAGlBqC,cAAc,OACd7P,UACEmN,EAAO2C,MAAK,SAACvQ,GAAK,OAAKA,EAAM2N,QAAQV,SAAS,cAC1C,QACA,GAENX,YAAY,uBAEd,kBAAC9K,EAAA,EAAOgP,MAAK,CAACrP,MAAI,EAACsP,OAAO,KACxB,kBAACjP,EAAA,EAAM,CACLd,QAASK,KAAKiN,YACdtK,SAAU2I,EACVlN,MAAM,SACN+C,QAAQ,YACRoO,cAAc,OACdnP,KAAK,SAEP,kBAACK,EAAA,EAAM,CACLrC,MAAM,OACNuE,SAA0B,cAAhByJ,EACVzM,QAASK,KAAKD,UACdoB,QAAQ,eACRoO,cAAc,QACdnP,KAAK,kBAGT,kBAAC,GAAS,CACRtD,MAAOA,EACPgC,WAAYkB,KAAKlB,WACjB8M,WAAY5L,KAAK4L,aAEnB,kBAAC,GAAW,CACVQ,YAAaA,EACbC,gBAAiBA,SAIxB,EA9Pc,CAAS7K,IAAMC,W,qBCN1BkO,GAAe,SAAC/C,EAAS3P,GAC7B,OAAO2P,EAAQ3P,KAAK6J,KAAO7J,EAAKS,IAAM,gBAAkB,IAwB3CkS,GAfC,SAAH,OAFQxB,EAEFxB,EAAO,EAAPA,QAAS3P,EAAI,EAAJA,KAAI,OAC9B,kBAAC4S,EAAA,EAAO,KACN,kBAACA,EAAA,EAAQC,OAAM,CAAC9K,IAAK4H,EAAQ3P,KAAKmG,SAClC,kBAACyM,EAAA,EAAQ7O,QAAO,CAACtB,UAAWiQ,GAAa/C,EAAS3P,IAChD,kBAAC4S,EAAA,EAAQE,OAAM,CAAC7P,GAAG,KAAK0M,EAAQ3P,KAAKsE,MACrC,kBAACsO,EAAA,EAAQG,SAAQ,MAPF5B,EAOgBxB,EAAQwB,UAPV6B,KAAO7B,GAAW8B,YAJrC,SAACtD,GACf,OAAOA,EAAQuD,eAAe,WAAavD,EAAQuD,eAAe,WAW7DC,CAAQxD,GACP,kBAAC7H,EAAA,EAAK,CAACC,IAAK4H,EAAQlH,MAAOhG,UAAU,mBAErC,kBAACmQ,EAAA,EAAQQ,KAAI,KAAEzD,EAAQzL,YCbhBmP,GARA,WAAH,OACV,yBAAK5Q,UAAU,UACb,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,kBCIJ6Q,GARE,WAAH,OACZ,yBAAK7Q,UAAU,YACb,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,qBACf,yBAAKA,UAAU,wBCMb8Q,GAAQ,iKAqQF,OArQE,oCACZ3T,MAAQ,CACN4T,eAAgB,EAAKvT,MAAMjB,iBAC3ByU,mBAAoBxU,EAASmB,WAAWC,IAAI,mBAC5C8I,YAAalK,EAASmB,WAAWC,IAAI,YACrCqT,SAAU,GACVC,iBAAiB,EACjB9U,QAAS,EAAKoB,MAAMnB,eACpBmP,kBAAkB,EAClBjO,KAAM,EAAKC,MAAMC,YACjBC,SAAUlB,EAASmB,WAAWC,IAAI,SAClCwN,eAAgB,GAChB+F,WAAY,GACZ7F,eAAe,EACf8F,cAAe,GACfzK,UAAWnK,EAASmB,WAAWC,IAAI,UACnCyT,YAAa,GACb7H,aAAchN,EAASmB,WAAWC,IAAI,mBACtC0T,UAAW,IACX,EAiBFxJ,gBAAkB,SAACwJ,GACjBA,EAAUvJ,SAAQ,SAACwJ,GACjBA,EAAS3T,IAAIG,MAAMwT,EAASnK,IAAInJ,IAAIsT,EAAS3N,WAE/C,EAQF4N,eAAiB,SAACpK,EAAIxJ,EAAKgG,GAOzB,IAAe,IAND,EAAKzG,MAAMmU,UAAU9J,WAAU,SAAC+J,GAC5C,OACEA,EAASnK,KAAOA,GAAMmK,EAAS3T,MAAQA,GAAO2T,EAAS3N,QAAUA,KAInD,CAChB,IAAM6N,EAAc,CAAErK,KAAIxJ,MAAKgG,SAC/B,EAAKpF,SAAS,CAAE8S,UAAW,EAAKnU,MAAMmU,UAAUnH,OAAOsH,OAEzD,EAEFC,eAAiB,WACf,EAAKC,YAAYC,eAAe,CAAEC,SAAU,YAC5C,EAEF/K,aAAe,SAACI,GACd,EAAK4K,mBAAmB5K,GACxB,EAAK6K,mBAAmB7K,IACxB,EAEF6K,mBAAqB,SAAC7K,GACpB,IAAImK,EAAc,GAClB,EAAKlU,MAAMwJ,UAAU5I,MAAMmJ,GAAW9I,GAAG,eAAe,SAACC,GACnDA,EAAKyB,MAAQ,EAAK3C,MAAMI,KAAKS,MAC/BqT,EAAcA,EAAYlH,OAAO,CAC/B/C,GAAI/I,EAAKyB,IACT+B,KAAMxD,EAAKE,QAEb,EAAKC,SAAS,CAAE6S,oBAGpB,EAAKG,eAAetK,EAAW,EAAK/J,MAAMwJ,UAAW,eAErD,EAAKxJ,MAAMwJ,UAAU5I,MAAMmJ,GAAW9I,GAAG,iBAAiB,SAACC,IAE1C,IADDgT,EAAY7J,WAAU,SAACjK,GAAI,OAAKA,EAAK6J,KAAO/I,EAAKyB,SAE7DuR,EAAcA,EAAYtG,QAAO,SAACxN,GAAI,OAAKA,EAAK6J,KAAO/I,EAAKyB,OAC5D,EAAKtB,SAAS,CAAE6S,oBAGpB,EAAKG,eAAetK,EAAW,EAAK/J,MAAMwJ,UAAW,iBAErD,EAAKxJ,MAAMqM,aAAapL,GAAG,SAAS,SAACC,IAChB,IAAfA,EAAKE,OACP,EAAKpB,MAAMwJ,UACR5I,MAAMmJ,GACNnJ,MAAM,EAAKZ,MAAMI,KAAKS,KACtB6L,eACAlB,QAAO,SAACrJ,GACK,OAARA,GACFJ,QAAQK,MAAMD,UAKxB,EAEFwS,mBAAqB,SAAC5K,GACpB,IAAI8K,EAAiB,GACfpU,EAAM,EAAKiR,iBACjBjR,EAAIG,MAAMmJ,GAAW9I,GAAG,eAAe,SAACC,GACtC2T,EAAejT,KAAKV,EAAKE,OACzB,EAAKC,SAAS,CACZyS,SAAUe,EACVd,iBAAiB,IAEnB,EAAKe,iBAAiBD,GACtB,EAAKE,eAAeF,MAEtB,EAAKR,eAAetK,EAAWtJ,EAAK,gBACpC,EAEFuU,qBAAuB,SAACjL,EAAW/I,GACjC,EAAKhB,MAAMO,SACRK,MAAMI,GACNJ,MAAM,WACNqU,KAAK,SACLnT,MAAK,SAACoT,GACL,GAAmB,OAAfA,EAAK9T,MAAgB,CACvB,IACM+T,EADaC,OAAOC,KAAKH,EAAK9T,OACLiO,SAAStF,GACxC,EAAK1I,SAAS,CAAEgN,iBAAkB8G,SAGxC,EAEFzD,eAAiB,WACf,MAA4D,EAAK1R,MAAzDuJ,EAAW,EAAXA,YAAasK,EAAkB,EAAlBA,mBACrB,OADuD,EAAdD,eACjBC,EAAqBtK,GAC7C,EAEF6E,WAAa,WACX,EAAK/M,UACH,SAACiU,GAAS,MAAM,CACdjH,kBAAmBiH,EAAUjH,qBAE/B,kBAAM,EAAKkH,kBAEb,EAEFA,YAAc,WACR,EAAKvV,MAAMqO,iBACb,EAAKrO,MAAMO,SAASK,MAAM,GAAD,OAAI,EAAKZ,MAAMI,KAAKS,IAAG,aAAYgB,OAAO,eAChE,EAAK7B,MAAMf,QAAQgL,GAAK,CACvBvF,KAAM,EAAK1E,MAAMf,QAAQyF,KACzBuG,QAAS,EAAKjL,MAAMf,QAAQgM,QAC5BC,UAAW,CACTxG,KAAM,EAAK1E,MAAMf,QAAQiM,UAAUxG,KACnC6B,OAAQ,EAAKvG,MAAMf,QAAQiM,UAAU3E,WAK3C,EAAKvG,MAAMO,SACRK,MAAM,GAAD,OAAI,EAAKZ,MAAMI,KAAKS,IAAG,aAC5BD,MAAM,EAAKZ,MAAMf,QAAQgL,IACzBuB,QAAO,SAACrJ,GACK,OAARA,GACFJ,QAAQK,MAAMD,OAItB,EAEF+L,mBAAqB,SAACzH,GACpB,EAAKpF,SACH,CACE2S,WAAYvN,EAAME,OAAO2E,MACzB6C,eAAe,IAEjB,kBAAM,EAAKqH,2BAEb,EAEFA,qBAAuB,WACrB,IAAMC,EAAe,YAAO,EAAKzV,MAAM8T,UACjC4B,EAAQ,IAAIC,OAAO,EAAK3V,MAAMgU,WAAY,MAC1CC,EAAgBwB,EAAgB3I,QAAO,SAACC,EAAKgD,GAOjD,OALGA,EAAQzL,SAAWyL,EAAQzL,QAAQsR,MAAMF,IAC1C3F,EAAQ3P,KAAKsE,KAAKkR,MAAMF,KAExB3I,EAAInL,KAAKmO,GAEJhD,IACN,IACH,EAAK1L,SAAS,CAAE4S,kBAChBrD,YAAW,kBAAM,EAAKvP,SAAS,CAAE8M,eAAe,MAAU,MAC1D,EAEF2G,iBAAmB,SAAChB,GAClB,IAAM+B,EAAc/B,EAAShH,QAAO,SAACC,EAAKgD,GAIxC,OAHKhD,EAAIsC,SAASU,EAAQ3P,KAAKsE,OAC7BqI,EAAInL,KAAKmO,EAAQ3P,KAAKsE,MAEjBqI,IACN,IACG+I,EAASD,EAAYtT,OAAS,GAA4B,IAAvBsT,EAAYtT,OAC/C0L,EAAc,UAAM4H,EAAYtT,OAAM,gBAAQuT,EAAS,IAAM,IACnE,EAAKzU,SAAS,CAAE4M,oBAChB,EAEF8G,eAAiB,SAACjB,GAChB,IAAIiC,EAAYjC,EAAShH,QAAO,SAACC,EAAKgD,GASpC,OARIA,EAAQ3P,KAAKsE,QAAQqI,EACvBA,EAAIgD,EAAQ3P,KAAKsE,MAAM+F,OAAS,EAEhCsC,EAAIgD,EAAQ3P,KAAKsE,MAAQ,CACvB6B,OAAQwJ,EAAQ3P,KAAKmG,OACrBkE,MAAO,GAGJsC,IACN,IACH,EAAK1M,MAAM2V,aAAaD,IACxB,EAEFE,gBAAkB,SAACnC,GAAQ,OACzBA,EAASvR,OAAS,GAClBuR,EAAStR,KAAI,SAACuN,GAAO,OACnB,kBAAC,GAAO,CACNpN,IAAKoN,EAAQwB,UACbxB,QAASA,EACT3P,KAAM,EAAKJ,MAAMI,WAEnB,EAEJ8V,mBAAqB,SAACjX,GACpB,OAAOA,EAAO,UACP,EAAKe,MAAM4T,eAAiB,IAAM,KAAG,OAAG3U,EAAQyF,MACnD,IACJ,EAEFyR,mBAAqB,SAAC/J,GAAK,OACzBA,EAAM7J,OAAS,GACf6J,EAAM5J,KAAI,SAACpC,GAAI,OACb,yBACE4C,MAAO,CAAEoT,QAAS,OAAQC,WAAY,SAAU9H,aAAc,SAC9D5L,IAAKvC,EAAK6J,IAEV,0BAAMpH,UAAU,gBAAgBzC,EAAKsE,KAAI,cAAkB,IAAC,kBAAC,GAAM,WAErE,EAEJ4R,uBAAyB,SAAC7H,GAAO,OAC/BA,EACE,kBAAC,IAAM/L,SAAQ,KACZ,YAAI6T,MAAM,KAAK/T,KAAI,SAACgU,EAAG/T,GAAC,OACvB,kBAAC,GAAQ,CAACE,IAAKF,QAGjB,MAAI,EAsCT,OAtCS,8CAhPV,WACE,MAAqCU,KAAKnD,MAAlCf,EAAO,EAAPA,QAASmB,EAAI,EAAJA,KAAM+T,EAAS,EAATA,UAEnBlV,GAAWmB,IACb+C,KAAKwH,gBAAgBwJ,GACrBhR,KAAKwG,aAAa1K,EAAQgL,IAC1B9G,KAAK6R,qBAAqB/V,EAAQgL,GAAI7J,EAAKS,QAE9C,kCAED,WACEsC,KAAKwH,gBAAgBxH,KAAKnD,MAAMmU,WAChChR,KAAKnD,MAAMqM,aAAavL,QACzB,gCAQD,SAAmB2V,EAAWnB,GACxBnS,KAAKqR,aACPrR,KAAKoR,mBAER,oBAyND,WAAU,IAAD,OAEP,EAA2KpR,KAAKnD,MAAxKuJ,EAAW,EAAXA,YAAauK,EAAQ,EAARA,SAAU7U,EAAO,EAAPA,QAASmB,EAAI,EAAJA,KAAM6N,EAAc,EAAdA,eAAgB+F,EAAU,EAAVA,WAAYC,EAAa,EAAbA,cAAe9F,EAAa,EAAbA,cAAeyF,EAAc,EAAdA,eAAgBvF,EAAgB,EAAhBA,iBAAkB6F,EAAW,EAAXA,YAAaH,EAAe,EAAfA,gBAEvJ,OACE,kBAAC,IAAMrR,SAAQ,KACb,kBAAC,EAAc,CACb0G,YAAajG,KAAK+S,mBAAmBjX,GACrCgP,eAAgBA,EAChBC,mBAAoB/K,KAAK+K,mBACzBC,cAAeA,EACf/O,iBAAkBwU,EAClBxF,WAAYjL,KAAKiL,WACjBC,iBAAkBA,IAGpB,kBAACjK,EAAA,EAAO,KACN,kBAAC4O,EAAA,EAAQJ,MAAK,CAAC/P,UAAU,YACtBM,KAAKmT,uBAAuBvC,GAC5BC,EACG7Q,KAAK8S,gBAAgBhC,GACrB9Q,KAAK8S,gBAAgBnC,GACxB3Q,KAAKgT,mBAAmBjC,GACzB,yBAAKzT,IAAK,SAACmI,GAAI,OAAM,EAAK4L,YAAc5L,OAI5C,kBAAC,GAAW,CACVW,YAAaA,EACbrK,eAAgBD,EAChBqB,YAAaF,EACbhB,iBAAkBwU,EAClBlC,eAAgBvO,KAAKuO,sBAI5B,EA3SW,CAAS/M,IAAMC,WA8SdC,eAAQ,KAAM,CAAEmR,ahB7QH,SAACD,GAC3B,MAAO,CACLlX,KCvC0B,iBDwC1BC,QAAS,CACPiX,gBgByQSlR,CAAgC8O,I,6BCtNhC+C,GA1FA,iKA6BG,OA7BH,oCACb1W,MAAQ,CACNf,QAAS,EAAKoB,MAAMnB,eACpB0U,eAAgB,EAAKvT,MAAMjB,iBAC3BuX,YAAa,GACb,EAEFC,eAAiB,SAACnQ,EAAOoQ,GACvB,IAAQzM,EAAUyM,EAAVzM,MAEF0M,EADkB,EAAK9W,MAArB2W,cACyBvM,GAAS,EAAIA,EAC9C,EAAK/I,SAAS,CAAEsV,YAAaG,KAC7B,EAEFC,YAAc,SAACC,GAAG,MACI,UAAMA,EAA1BA,EAAM,GAAa,IAARA,EAAkB,SAAiB,UAAO,EAEvDC,kBAAoB,SAACC,GAAK,OACxB9B,OAAO+B,QAAQD,GACZE,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAE,GAAKD,EAAE,MACxB7U,KAAI,WAAaC,GAAC,wBAAZE,EAAG,KAAEvB,EAAG,YACb,kBAACmW,GAAA,EAAK1L,KAAI,CAAClJ,IAAKF,GACd,kBAACyF,EAAA,EAAK,CAAC3B,QAAM,EAAC4B,IAAK/G,EAAImF,SACvB,kBAACgR,GAAA,EAAKpT,QAAO,KACX,kBAACoT,GAAA,EAAKrT,OAAM,CAACb,GAAG,KAAKV,GACrB,kBAAC4U,GAAA,EAAKC,YAAW,KAAE,EAAKT,YAAY3V,EAAIqJ,aAI7CgN,MAAM,EAAG,IAAE,EA0Df,OA1De,mCAEhB,WACE,MAAiDtU,KAAKnD,MAA9C2W,EAAW,EAAXA,YAAa/C,EAAc,EAAdA,eAAgB3U,EAAO,EAAPA,QAC7B8W,EAAc5S,KAAK9C,MAAnB0V,UAER,OAAInC,EAAuB,KAGzB,kBAACxP,EAAA,EAAO,CAACqK,SAAUxP,GACjB,kBAACiF,EAAA,EAAM,CAACb,GAAG,KAAKqU,SAAS,OAAK,WACnBzY,GAAWA,EAAQyF,MAE9B,kBAACiT,GAAA,EAAS,CAACC,QAAM,EAACF,SAAS,QACzB,kBAACC,GAAA,EAAUE,MAAK,CACd9L,OAAwB,IAAhB4K,EACRvM,MAAO,EACPtH,QAASK,KAAKyT,gBAEd,kBAACnS,EAAA,EAAI,CAACC,KAAK,aACX,kBAACD,EAAA,EAAI,CAACC,KAAK,SAAS,mBAGtB,kBAACiT,GAAA,EAAUxT,QAAO,CAAC4H,OAAwB,IAAhB4K,GACxB1X,GAAWA,EAAQgM,SAGtB,kBAAC0M,GAAA,EAAUE,MAAK,CACd9L,OAAwB,IAAhB4K,EACRvM,MAAO,EACPtH,QAASK,KAAKyT,gBAEd,kBAACnS,EAAA,EAAI,CAACC,KAAK,aACX,kBAACD,EAAA,EAAI,CAACC,KAAK,gBAAgB,eAG7B,kBAACiT,GAAA,EAAUxT,QAAO,CAAC4H,OAAwB,IAAhB4K,GACzB,kBAACY,GAAA,EAAI,KAAExB,GAAa5S,KAAK8T,kBAAkBlB,KAG7C,kBAAC4B,GAAA,EAAUE,MAAK,CACd9L,OAAwB,IAAhB4K,EACRvM,MAAO,EACPtH,QAASK,KAAKyT,gBAEd,kBAACnS,EAAA,EAAI,CAACC,KAAK,aACX,kBAACD,EAAA,EAAI,CAACC,KAAK,qBAAqB,cAGlC,kBAACiT,GAAA,EAAUxT,QAAO,CAAC4H,OAAwB,IAAhB4K,GACzB,kBAACzS,EAAA,EAAM,CAACb,GAAG,MACT,kBAAC6E,EAAA,EAAK,CAAC4P,UAAQ,EAAC3P,IAAKlJ,GAAWA,EAAQiM,UAAU3E,SACjDtH,GAAWA,EAAQiM,UAAUxG,aAMzC,EAvFY,CAASC,IAAMC,W,mBC0FfmT,iBApFM,SAAH,GAAqB,IAAfC,EAAO,EAAPA,QACtB,EAAwBC,mBAAS,IAAG,oBAA7BC,EAAI,KAAEC,EAAO,KACpB,EAAwBF,mBAAS,IAAG,oBAA7BvT,EAAI,KAAE0T,EAAO,KACpB,EAAwBH,oBAAS,GAAM,oBAAhCI,EAAI,KAAEC,EAAO,KACpB,EAAgCL,mBAAS,IAAG,oBAArCM,EAAQ,KAAEC,EAAW,KAa5B,OAAOH,EACL,kBAAC,KAAK,CACJI,SAAUP,EACVrS,YAAanB,EACb6T,SAAUA,EACVG,aAAc,kBAVhB/Z,GAAU,GACVqZ,EAAQpW,KAAK,UACbG,QAAQC,IAAI,UAAWgW,IASrBW,iBAAkB,0CAClBC,gBAAiB,CAAEjV,MAAO,QAASmF,OAAQ,WAG7C,kBAACpB,EAAA,EAAI,CAACmR,UAAU,SAASC,cAAc,SAASjW,UAAU,OACxD,kBAAC6E,EAAA,EAAKC,OAAM,CAAC3E,MAAO,CAAE+V,SAAU,MAC9B,kBAAC7U,EAAA,EAAM,CAACb,GAAG,KAAKE,MAAI,EAAChC,MAAM,OAAOsX,UAAU,UAC1C,kBAACpU,EAAA,EAAI,CAACC,KAAK,QAAQnD,MAAM,SAAS,mBAGpC,kBAACyK,EAAA,EAAI,CAACnI,KAAK,SACT,kBAACO,EAAA,EAAO,CAAC4U,SAAO,GACd,kBAAChN,EAAA,EAAK1D,MAAK,CACTC,OAAK,EACL0B,GAAG,OACH1G,KAAK,YACL0V,aAAa,OACbvK,YAAY,OACZnK,SAAU,SAAC2U,GAAC,OAAKf,EAAQe,EAAEvS,OAAO2E,QAClCA,MAAO4M,EACPrZ,KAAK,SAGP,kBAACmN,EAAA,EAAK1D,MAAK,CACTC,OAAK,EACL0B,GAAG,OACH1G,KAAK,OACL0V,aAAa,OACbvK,YAAY,OACZnK,SAAU,SAAC2U,GAAC,OAAKd,EAAQc,EAAEvS,OAAO2E,QAClCA,MAAO5G,EACP7F,KAAK,SAGP,kBAACmN,EAAA,EAAK1D,MAAK,CACTC,OAAK,EACL0B,GAAG,WACH1G,KAAK,OACL0V,aAAa,OACbvK,YAAY,sBACZnK,SAAU,SAAC2U,GAAC,OAAKV,EAAYU,EAAEvS,OAAO2E,QACtCA,MAAOiN,EACP1Z,KAAK,aAGP,kBAAC+E,EAAA,EAAM,CACLrC,MAAM,OACNgH,OAAK,EACL1E,KAAK,QACLf,QAlEQ,SAAC2D,GACnBA,EAAM2E,iBACF8M,GAAQxT,GAAM4T,GAAQ,IAiEhBzZ,KAAK,UAAQ,uBCvBZgG,gBATS,SAAC7E,GAAK,MAAM,CAClCM,YAAaN,EAAMI,KAAKE,YACxBpB,eAAgBc,EAAMf,QAAQC,eAC9BE,iBAAkBY,EAAMf,QAAQG,iBAChC2W,UAAW/V,EAAMf,QAAQ8W,UACzBjR,aAAc9E,EAAMsC,OAAOwC,aAC3BC,eAAgB/E,EAAMsC,OAAOyC,kBAGhBF,EAnDH,SAAH,GAA6G,IAAvGvE,EAAW,EAAXA,YAAapB,EAAc,EAAdA,eAAgBE,EAAgB,EAAhBA,iBAAkB2W,EAAS,EAATA,UAAWjR,EAAY,EAAZA,aAAcC,EAAc,EAAdA,eAAgBiT,EAAO,EAAPA,QAKrG,OACA,kBAACtQ,EAAA,EAAI,CAACiB,QAAQ,QAAQ9F,UAAU,MAAMG,MAAO,CAAEC,WAAY8B,IACzD,kBAAC,EAAU,CACTpC,IAAKrC,GAAeA,EAAYoE,KAChCpE,YAAaA,IAEf,kBAAC,EAAS,CACRqC,IAAKrC,GAAeA,EAAYO,IAChCP,YAAaA,EACbwE,aAAcA,IAGhB,kBAAC4C,EAAA,EAAKC,OAAM,CAAC3E,MAAO,CAAEmW,WAAY,MAChC,kBAAC,GAAQ,CACPxW,IAAKzD,GAAkBA,EAAe+K,GACtC/K,eAAgBA,EAChBoB,YAAaA,EACblB,iBAAkBA,KAItB,kBAACsI,EAAA,EAAKC,OAAM,CAAChE,MAAO,GAClB,kBAAC,GAAS,CACRhB,IAAKzD,GAAkBA,EAAewF,KACtCqR,UAAWA,EACX7W,eAAgBA,EAChBE,iBAAkBA,IAEpB,kBAAC8E,EAAA,EAAM,CAACb,GAAG,KAAKP,QAhCA,WAChBnE,GAAU,GACVqZ,EAAQpW,KAAK,WA8BuBiB,UAAU,UACtC,kBAAC4B,EAAA,EAAI,CAACC,KAAK,UACX,kBAACR,EAAA,EAAOC,QAAO,4B,mBCsEdiV,GA3GJ,iKA2CP,OA3CO,oCACTpZ,MAAQ,CACNqZ,MAAO,GACPd,SAAU,GACVvI,OAAQ,GACRvB,SAAS,GACT,EAEF6K,cAAgB,SAACtJ,GAAM,OACrBA,EAAOxN,KAAI,SAACJ,EAAOK,GAAC,OAAK,uBAAGE,IAAKF,GAAIL,EAAM2N,aAAa,EAE1DvJ,aAAe,SAACC,GACd,EAAKpF,SAAS,eAAGoF,EAAME,OAAOjC,KAAO+B,EAAME,OAAO2E,SAClD,EAEFH,aAAe,SAAC1E,GACdA,EAAM2E,iBACF,EAAKC,YAAY,EAAKrL,SACxB,EAAKqB,SAAS,CAAE2O,OAAQ,GAAIvB,SAAS,IACrCpP,EACGmG,OACA+T,2BAA2B,EAAKvZ,MAAMqZ,MAAO,EAAKrZ,MAAMuY,UACxDzW,MAAK,SAAC0X,GACLzX,QAAQC,IAAIwX,MAEbtX,OAAM,SAACC,GACNJ,QAAQK,MAAMD,GACd,EAAKd,SAAS,CACZ2O,OAAQ,EAAKhQ,MAAMgQ,OAAOhD,OAAO7K,GACjCsM,SAAS,SAIjB,EAEFpD,YAAc,gBAAGgO,EAAK,EAALA,MAAOd,EAAQ,EAARA,SAAQ,OAAOc,GAASd,GAAQ,EAExDkB,iBAAmB,SAACzJ,EAAQ0J,GAC1B,OAAO1J,EAAO2C,MAAK,SAACvQ,GAAK,OACvBA,EAAM2N,QAAQ4J,cAActK,SAASqK,MAEnC,QACA,IACL,EA6DA,OA7DA,mCAED,WACE,MAA6CvW,KAAKnD,MAA1CqZ,EAAK,EAALA,MAAOd,EAAQ,EAARA,SAAUvI,EAAM,EAANA,OAAQvB,EAAO,EAAPA,QAEjC,OACE,kBAAC/G,EAAA,EAAI,CAACmR,UAAU,SAASC,cAAc,SAASjW,UAAU,OACxD,kBAAC6E,EAAA,EAAKC,OAAM,CAAC3E,MAAO,CAAE+V,SAAU,MAC9B,kBAAC7U,EAAA,EAAM,CAACb,GAAG,KAAKE,MAAI,EAAChC,MAAM,SAASsX,UAAU,UAC5C,kBAACpU,EAAA,EAAI,CAACC,KAAK,cAAcnD,MAAM,WAAW,sBAG5C,kBAACyK,EAAA,EAAI,CAACC,SAAU9I,KAAKgI,aAActH,KAAK,SACtC,kBAACO,EAAA,EAAO,CAAC4U,SAAO,GACd,kBAAChN,EAAA,EAAK1D,MAAK,CACTC,OAAK,EACL7D,KAAK,QACLnB,KAAK,OACL0V,aAAa,OACbvK,YAAY,gBACZnK,SAAUpB,KAAKqD,aACf8E,MAAO+N,EACPxW,UAAWM,KAAKsW,iBAAiBzJ,EAAQ,SACzCnR,KAAK,UAGP,kBAACmN,EAAA,EAAK1D,MAAK,CACTC,OAAK,EACL7D,KAAK,WACLnB,KAAK,OACL0V,aAAa,OACbvK,YAAY,WACZnK,SAAUpB,KAAKqD,aACf8E,MAAOiN,EACP1V,UAAWM,KAAKsW,iBAAiBzJ,EAAQ,YACzCnR,KAAK,aAGP,kBAAC+E,EAAA,EAAM,CACLkC,SAAU2I,EACV5L,UAAW4L,EAAU,UAAY,GACjClN,MAAM,SACNgH,OAAK,EACL1E,KAAK,SAAO,YAMjBmM,EAAOzN,OAAS,GACf,kBAAC,KAAO,CAACH,OAAK,GACZ,qCACCe,KAAKmW,cAActJ,IAGxB,kBAAC,KAAO,+BACiB,kBAAC,KAAI,CAAC4J,GAAG,aAAW,mBAKpD,EAxGQ,CAASjV,IAAMC,W,qBC0MXiV,GAzMD,iKA2GV,OA3GU,oCACZ7Z,MAAQ,CACN8Z,SAAU,GACVT,MAAO,GACPd,SAAU,GACVwB,qBAAsB,GACtB/J,OAAQ,GACRvB,SAAS,EACTlO,SAAUlB,EAASmB,WAAWC,IAAI,UAClC,EAEF4K,YAAc,WACZ,IACIjJ,EADA4N,EAAS,GAGb,OAAI,EAAKgK,YAAY,EAAKha,QACxBoC,EAAQ,CAAE2N,QAAS,sBACnB,EAAK1O,SAAS,CAAE2O,OAAQA,EAAOhD,OAAO5K,MAC/B,KACG,EAAK6X,gBAAgB,EAAKja,SACpCoC,EAAQ,CAAE2N,QAAS,uBACnB,EAAK1O,SAAS,CAAE2O,OAAQA,EAAOhD,OAAO5K,MAC/B,IAIT,EAEF4X,YAAc,YAA0D,IAAvDF,EAAQ,EAARA,SAAUT,EAAK,EAALA,MAAOd,EAAQ,EAARA,SAAUwB,EAAoB,EAApBA,qBAC1C,OACGD,EAASvX,SACT8W,EAAM9W,SACNgW,EAAShW,SACTwX,EAAqBxX,QAExB,EAEF0X,gBAAkB,YAAyC,IAAtC1B,EAAQ,EAARA,SAAUwB,EAAoB,EAApBA,qBAC7B,QAAIxB,EAAShW,OAAS,GAAKwX,EAAqBxX,OAAS,IAE9CgW,IAAawB,GAKxB,EAEFT,cAAgB,SAACtJ,GAAM,OACrBA,EAAOxN,KAAI,SAACJ,EAAOK,GAAC,OAAK,uBAAGE,IAAKF,GAAIL,EAAM2N,aAAa,EAE1DvJ,aAAe,SAACC,GACd,EAAKpF,SAAS,eAAGoF,EAAME,OAAOjC,KAAO+B,EAAME,OAAO2E,SAClD,EAEFH,aAAe,SAAC1E,GACdA,EAAM2E,iBACN,EAAK/J,SAAS,CAAE2O,OAAQ,GAAIvB,SAAS,IACjC,EAAKpD,eACPhM,EACGmG,OACA0U,+BAA+B,EAAKla,MAAMqZ,MAAO,EAAKrZ,MAAMuY,UAC5DzW,MAAK,SAACqY,GACLpY,QAAQC,IAAImY,GACZA,EAAY/Z,KACTiG,cAAc,CACbR,YAAa,EAAK7F,MAAM8Z,SACxBxT,SAAS,8BAAD,OAAgC8T,KACtCD,EAAY/Z,KAAKiZ,OAClB,kBAEFvX,MAAK,WACJ,EAAKuY,SAASF,GAAarY,MAAK,WAC9BC,QAAQC,IAAI,iBAEd,EAAKX,SAAS,CAAE2O,OAAQ,GAAIvB,SAAS,OAEtCvM,OAAM,SAACC,GACNJ,QAAQK,MAAMD,GACd,EAAKd,SAAS,CACZ2O,OAAQ,EAAKhQ,MAAMgQ,OAAOhD,OAAO7K,GACjCsM,SAAS,UAIhBvM,OAAM,SAACC,GACNJ,QAAQK,MAAMD,GACd,EAAKd,SAAS,CACZ2O,OAAQ,EAAKhQ,MAAMgQ,OAAOhD,OAAO7K,GACjCsM,SAAS,QAIjB,EAEF4L,SAAW,SAACF,GACV,OAAO,EAAKna,MAAMO,SAASK,MAAMuZ,EAAY/Z,KAAKS,KAAK4L,IAAI,CACzD/H,KAAMyV,EAAY/Z,KAAKyF,YACvBU,OAAQ4T,EAAY/Z,KAAKkG,YAE3B,EAEFmT,iBAAmB,SAACzJ,EAAQ0J,GAC1B,OAAO1J,EAAO2C,MAAK,SAACvQ,GAAK,OACvBA,EAAM2N,QAAQ4J,cAActK,SAASqK,MAEnC,QACA,IACL,EA2FA,OA3FA,mCAED,WACE,MAOIvW,KAAKnD,MANP8Z,EAAQ,EAARA,SACAT,EAAK,EAALA,MACAd,EAAQ,EAARA,SACAwB,EAAoB,EAApBA,qBACA/J,EAAM,EAANA,OACAvB,EAAO,EAAPA,QAGF,OACE,kBAAC/G,EAAA,EAAI,CAACmR,UAAU,SAASC,cAAc,SAASjW,UAAU,OACxD,kBAAC6E,EAAA,EAAKC,OAAM,CAAC3E,MAAO,CAAE+V,SAAU,MAC9B,kBAAC7U,EAAA,EAAM,CAACb,GAAG,KAAKE,MAAI,EAAChC,MAAM,SAASsX,UAAU,UAC5C,kBAACpU,EAAA,EAAI,CAACC,KAAK,eAAenD,MAAM,WAAW,0BAG7C,kBAACyK,EAAA,EAAI,CAACC,SAAU9I,KAAKgI,aAActH,KAAK,SACtC,kBAACO,EAAA,EAAO,CAAC4U,SAAO,GACd,kBAAChN,EAAA,EAAK1D,MAAK,CACTC,OAAK,EACL7D,KAAK,WACLnB,KAAK,OACL0V,aAAa,OACbvK,YAAY,WACZnK,SAAUpB,KAAKqD,aACf8E,MAAOwO,EACPjb,KAAK,SAGP,kBAACmN,EAAA,EAAK1D,MAAK,CACTC,OAAK,EACL7D,KAAK,QACLnB,KAAK,OACL0V,aAAa,OACbvK,YAAY,gBACZnK,SAAUpB,KAAKqD,aACf8E,MAAO+N,EACPxW,UAAWM,KAAKsW,iBAAiBzJ,EAAQ,SACzCnR,KAAK,UAGP,kBAACmN,EAAA,EAAK1D,MAAK,CACTC,OAAK,EACL7D,KAAK,WACLnB,KAAK,OACL0V,aAAa,OACbvK,YAAY,WACZnK,SAAUpB,KAAKqD,aACf8E,MAAOiN,EACP1V,UAAWM,KAAKsW,iBAAiBzJ,EAAQ,YACzCnR,KAAK,aAGP,kBAACmN,EAAA,EAAK1D,MAAK,CACTC,OAAK,EACL7D,KAAK,uBACLnB,KAAK,SACL0V,aAAa,OACbvK,YAAY,wBACZnK,SAAUpB,KAAKqD,aACf8E,MAAOyO,EACPlX,UAAWM,KAAKsW,iBAAiBzJ,EAAQ,YACzCnR,KAAK,aAGP,kBAAC+E,EAAA,EAAM,CACLkC,SAAU2I,EACV5L,UAAW4L,EAAU,UAAY,GACjClN,MAAM,SACNgH,OAAK,EACL1E,KAAK,SAAO,YAMjBmM,EAAOzN,OAAS,GACf,kBAAC,KAAO,CAACH,OAAK,GACZ,qCACCe,KAAKmW,cAActJ,IAGxB,kBAAC,KAAO,wBACU,kBAAC,KAAI,CAAC4J,GAAG,UAAQ,gBAK1C,EAtMW,CAASjV,IAAMC,W,oBCLd0V,GANC,WAAH,OACX,kBAACC,GAAA,EAAM,CAACxO,QAAM,GACZ,kBAACyO,GAAA,EAAM,CAAC3W,KAAK,OAAOS,QAAS,wBCK3BmW,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjF,MACvB,2DAsCN,SAASkF,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTjZ,MAAK,SAAAqZ,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBrb,QACfgb,UAAUC,cAAcO,WAK1BzZ,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBE,OAAM,SAAAE,GACLL,QAAQK,MAAM,4CAA6CA,M,8BC5E3DqZ,GAAmB,CACvBnb,YAAa,KACbob,WAAW,EACX3c,QAAQ,GAyBJ4c,GAAsB,CAC1Bzc,eAAgB,KAChBE,kBAAkB,EAClB2W,UAAW,MAyBP6F,GAAqB,CACzB9W,aAAc,UACdC,eAAgB,QAqBH8W,GANKC,2BAAgB,CAClC1b,KApEmB,WAAuC,IAAtCJ,EAAK,uDAAGyb,GAAkBM,EAAM,uCACpD,OAAQA,EAAOld,MACb,IvBVoB,WuBWlB,MAAO,CACLyB,YAAayb,EAAOjd,QAAQwB,YAC5Bob,WAAW,GAEf,IvBdsB,auBepB,OAAO,2BACF1b,GAAK,IACR0b,WAAW,IAEf,IvBlBsB,auBmBpB,OAAO,2BACF1b,GAAK,IACRjB,OAAQgd,EAAOjd,UAEnB,QACE,OAAOkB,IAmDXf,QAzCsB,WAA0C,IAAzCe,EAAK,uDAAG2b,GAAqBI,EAAM,uCAC1D,OAAQA,EAAOld,MACb,IvBjC+B,sBuBkC7B,OAAO,2BACFmB,GAAK,IACRd,eAAgB6c,EAAOjd,QAAQI,iBAEnC,IvBrC+B,sBuBsC7B,OAAO,2BACFc,GAAK,IACRZ,iBAAkB2c,EAAOjd,QAAQM,mBAErC,IvBzC0B,iBuB0CxB,OAAO,2BACFY,GAAK,IACR+V,UAAWgG,EAAOjd,QAAQiX,YAE9B,QACE,OAAO/V,IAwBXsC,OAfqB,WAAyC,IAAxCtC,EAAK,uDAAG4b,GAAoBG,EAAM,uCACxD,OAAQA,EAAOld,MACb,IvBvDsB,auBwDpB,MAAO,CACLiG,aAAciX,EAAOjd,QAAQgG,aAC7BC,eAAgBgX,EAAOjd,QAAQiG,gBAEnC,QACE,OAAO/E,MC/CPgc,GAAQC,uBAAYJ,GAAaK,kCAEjCC,GAAI,kHA4BP,OA5BO,8CACR,WAAqB,IAAD,OAClBpa,QAAQC,IAAI,SAAUmB,KAAK9C,MAAMtB,QACjCM,EAASmG,OAAO4W,oBAAmB,SAAChc,GAC9BA,IAAS,EAAKC,MAAMtB,QACtB,EAAKsB,MAAMgc,QAAQjc,GACnB,EAAKC,MAAM2X,QAAQpW,KAAK,OAExB,EAAKvB,MAAM2X,QAAQpW,KAAK,UACxB,EAAKvB,MAAMic,kBAGhB,oBAED,WAAU,IAAD,OACP,OAAOnZ,KAAK9C,MAAMqb,UAChB,kBAAC,GAAO,MAER,kBAAC,KAAM,KACL,kBAAC,KAAK,CAACa,OAAK,EAACC,KAAK,IAAIC,UAAWC,KACjC,kBAAC,KAAK,CAACF,KAAK,SAASC,UAAWrD,KAChC,kBAAC,KAAK,CAACoD,KAAK,YAAYC,UAAW5C,KACnC,kBAAC,KAAK,CACJ2C,KAAK,SACLC,UAAW,kBAAM,kBAAC,GAAY,CAAC1d,OAAQ,EAAKsB,MAAMtB,iBAIzD,EA5BO,CAAS4F,IAAMC,WAoCnB+X,GAAe5E,aACnBlT,aANwB,SAAC7E,GAAK,MAAM,CACpC0b,UAAW1b,EAAMI,KAAKsb,UACtB3c,OAAQiB,EAAMI,KAAKrB,UAIQ,CAAEsd,QzB7DR,SAACjc,GACtB,MAAO,CACLvB,KCJoB,WDKpBC,QAAS,CACPwB,YAAaF,KyByDqBkc,UzBpDf,WACvB,MAAO,CACLzd,KCZsB,gBwB8DxBgG,CAAmDsX,KAGrDS,IAASC,OACP,kBAAC,IAAQ,CAACb,MAAOA,IACf,kBAAC,KAAM,KACL,kBAACW,GAAY,QAGjBG,SAASC,eAAe,SFrDX,WACb,GAA6C,kBAAmB/B,UAAW,CAGzE,GADkB,IAAIzT,IAAIyV,GAAwBrC,OAAOC,UAC3CqC,SAAWtC,OAAOC,SAASqC,OAIvC,OAGFtC,OAAO3T,iBAAiB,QAAQ,WAC9B,IAAM+T,EAAK,UAAMiC,GAAsB,sBAEnCvC,KAiDV,SAAiCM,GAE/BmC,MAAMnC,GACHjZ,MAAK,SAAAqb,GAGkB,MAApBA,EAASjQ,SACuD,IAAhEiQ,EAASC,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CtC,UAAUC,cAAcsC,MAAMzb,MAAK,SAAAqZ,GACjCA,EAAaqC,aAAa1b,MAAK,WAC7B6Y,OAAOC,SAAS6C,eAKpB3C,GAAgBC,MAGnB7Y,OAAM,WACLH,QAAQC,IACN,oEArEA0b,CAAwB3C,GAIxBC,UAAUC,cAAcsC,MAAMzb,MAAK,WACjCC,QAAQC,IACN,gHAMJ8Y,GAAgBC,OE2BxB4C,K","file":"static/js/main.6c2b832e.chunk.js","sourcesContent":["import * as actionTypes from \"./types\";\n\n/* User Actions */\nexport const setUser = (user) => {\n  return {\n    type: actionTypes.SET_USER,\n    payload: {\n      currentUser: user,\n    },\n  };\n};\n\nexport const clearUser = () => {\n  return {\n    type: actionTypes.CLEAR_USER,\n  };\n};\n\nexport const setBypass = (bool) => {\n  return {\n    type: actionTypes.SET_BYPASS,\n    payload: {\n      bypass: bool,\n    },\n  };\n};\n/* Channel Actions */\nexport const setCurrentChannel = (channel) => {\n  return {\n    type: actionTypes.SET_CURRENT_CHANNEL,\n    payload: {\n      currentChannel: channel,\n    },\n  };\n};\n\nexport const setPrivateChannel = (isPrivateChannel) => {\n  return {\n    type: actionTypes.SET_PRIVATE_CHANNEL,\n    payload: {\n      isPrivateChannel,\n    },\n  };\n};\n\nexport const setUserPosts = (userPosts) => {\n  return {\n    type: actionTypes.SET_USER_POSTS,\n    payload: {\n      userPosts,\n    },\n  };\n};\n\n/* Colors Actions */\nexport const setColors = (primaryColor, secondaryColor) => {\n  return {\n    type: actionTypes.SET_COLORS,\n    payload: {\n      primaryColor,\n      secondaryColor,\n    },\n  };\n};\n","/* User Action Types */\nexport const SET_USER = \"SET_USER\";\nexport const CLEAR_USER = \"CLEAR_USER\";\nexport const SET_BYPASS = \"SET_BYPASS\";\n\n/* Channel Action Types */\nexport const SET_CURRENT_CHANNEL = \"SET_CURRENT_CHANNEL\";\nexport const SET_PRIVATE_CHANNEL = \"SET_PRIVATE_CHANNEL\";\nexport const SET_USER_POSTS = \"SET_USER_POSTS\";\n\n/* Colors Action Types */\nexport const SET_COLORS = \"SET_COLORS\";\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/storage\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBBhXKUuu7fVwDuy3xr2_A7CVLRG_ee8DU\",\n  authDomain: \"auth-62e70.firebaseapp.com\",\n  databaseURL: \"https://auth-62e70-default-rtdb.firebaseio.com/\",\n  projectId: \"auth-62e70\",\n  storageBucket: \"auth-62e70.appspot.com\",\n  messagingSenderId: \"846971646971\",\n  appId: \"1:846971646971:web:125eb7e40ebae5233e115e\",\n  measurementId: \"G-F9B716H9F5\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n// firebase.analytics();\n\nexport default firebase;\n","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport { connect } from \"react-redux\";\nimport { setColors } from \"../../actions\";\n// prettier-ignore\nimport { Sidebar, Menu, Divider, Button, Modal, Icon, Label, Segment } from \"semantic-ui-react\";\nimport { SliderPicker } from \"react-color\";\n\nclass ColorPanel extends React.Component {\n  state = {\n    modal: false,\n    primary: \"\",\n    secondary: \"\",\n    user: this.props.currentUser,\n    usersRef: firebase.database().ref(\"users\"),\n    userColors: [],\n  };\n\n  componentDidMount() {\n    if (this.state.user) {\n      this.addListener(this.state.user.uid);\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListener();\n  }\n\n  removeListener = () => {\n    this.state.usersRef.child(`${this.state.user.uid}/colors`).off();\n  };\n\n  addListener = (userId) => {\n    let userColors = [];\n    this.state.usersRef.child(`${userId}/colors`).on(\"child_added\", (snap) => {\n      userColors.unshift(snap.val());\n      this.setState({ userColors });\n    });\n  };\n\n  handleChangePrimary = (color) => this.setState({ primary: color.hex });\n\n  handleChangeSecondary = (color) => this.setState({ secondary: color.hex });\n\n  handleSaveColors = () => {\n    if (this.state.primary && this.state.secondary) {\n      this.saveColors(this.state.primary, this.state.secondary);\n    }\n  };\n\n  saveColors = (primary, secondary) => {\n    this.state.usersRef\n      .child(`${this.state.user.uid}/colors`)\n      .push()\n      .update({\n        primary,\n        secondary,\n      })\n      .then(() => {\n        console.log(\"Colors added\");\n        this.closeModal();\n      })\n      .catch((err) => console.error(err));\n  };\n\n  displayUserColors = (colors) =>\n    colors.length > 0 &&\n    colors.map((color, i) => (\n      <React.Fragment key={i}>\n        <Divider />\n        <div\n          className=\"color__container\"\n          onClick={() => this.props.setColors(color.primary, color.secondary)}\n        >\n          <div className=\"color__square\" style={{ background: color.primary }}>\n            <div\n              className=\"color__overlay\"\n              style={{ background: color.secondary }}\n            />\n          </div>\n        </div>\n      </React.Fragment>\n    ));\n\n  openModal = () => this.setState({ modal: true });\n\n  closeModal = () => this.setState({ modal: false });\n\n  render() {\n    const { modal, primary, secondary, userColors } = this.state;\n\n    return (\n      <Sidebar\n        as={Menu}\n        icon=\"labeled\"\n        inverted\n        vertical\n        visible\n        width=\"very thin\"\n      >\n        <Divider />\n        <Button icon=\"add\" size=\"small\" color=\"blue\" onClick={this.openModal} />\n        {this.displayUserColors(userColors)}\n\n        {/* Color Picker Modal */}\n        <Modal basic open={modal} onClose={this.closeModal}>\n          <Modal.Header>Choose App Colors</Modal.Header>\n          <Modal.Content>\n            <Segment inverted>\n              <Label content=\"Primary Color\" />\n              <SliderPicker\n                color={primary}\n                onChange={this.handleChangePrimary}\n              />\n            </Segment>\n\n            <Segment inverted>\n              <Label content=\"Secondary Color\" />\n              <SliderPicker\n                color={secondary}\n                onChange={this.handleChangeSecondary}\n              />\n            </Segment>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button color=\"green\" inverted onClick={this.handleSaveColors}>\n              <Icon name=\"checkmark\" /> Save Colors\n            </Button>\n            <Button color=\"red\" inverted onClick={this.closeModal}>\n              <Icon name=\"remove\" /> Cancel\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </Sidebar>\n    );\n  }\n}\n\nexport default connect(null, { setColors })(ColorPanel);\n","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport AvatarEditor from \"react-avatar-editor\";\n// prettier-ignore\nimport { Grid, Header, Icon, Dropdown, Image, Modal, Input, Button } from \"semantic-ui-react\";\n\nclass UserPanel extends React.Component {\n  state = {\n    user: this.props.currentUser,\n    modal: false,\n    previewImage: \"\",\n    croppedImage: \"\",\n    blob: null,\n    uploadedCroppedImage: \"\",\n    storageRef: firebase.storage().ref(),\n    userRef: firebase.auth().currentUser,\n    usersRef: firebase.database().ref(\"users\"),\n    metadata: {\n      contentType: \"image/jpeg\",\n    },\n  };\n\n  openModal = () => this.setState({ modal: true });\n\n  closeModal = () => this.setState({ modal: false });\n\n  dropdownOptions = () => [\n    {\n      key: \"user\",\n      text: (\n        <span>\n          Signed in as <strong>{this.state.user.displayName}</strong>\n        </span>\n      ),\n      disabled: true,\n    },\n    {\n      key: \"avatar\",\n      text: <span onClick={this.openModal}>Change Avatar</span>,\n    },\n    {\n      key: \"signout\",\n      text: <span onClick={this.handleSignout}>Sign Out</span>,\n    },\n  ];\n\n  uploadCroppedImage = () => {\n    const { storageRef, userRef, blob, metadata } = this.state;\n\n    storageRef\n      .child(`avatars/users/${userRef.uid}`)\n      .put(blob, metadata)\n      .then((snap) => {\n        snap.ref.getDownloadURL().then((downloadURL) => {\n          this.setState({ uploadedCroppedImage: downloadURL }, () =>\n            this.changeAvatar()\n          );\n        });\n      });\n  };\n\n  changeAvatar = () => {\n    this.state.userRef\n      .updateProfile({\n        photoURL: this.state.uploadedCroppedImage,\n      })\n      .then(() => {\n        console.log(\"PhotoURL updated\");\n        this.closeModal();\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n\n    this.state.usersRef\n      .child(this.state.user.uid)\n      .update({ avatar: this.state.uploadedCroppedImage })\n      .then(() => {\n        console.log(\"User avatar updated\");\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  handleChange = (event) => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n\n    if (file) {\n      reader.readAsDataURL(file);\n      reader.addEventListener(\"load\", () => {\n        this.setState({ previewImage: reader.result });\n      });\n    }\n  };\n\n  handleCropImage = () => {\n    if (this.avatarEditor) {\n      this.avatarEditor.getImageScaledToCanvas().toBlob((blob) => {\n        let imageUrl = URL.createObjectURL(blob);\n        this.setState({\n          croppedImage: imageUrl,\n          blob,\n        });\n      });\n    }\n  };\n\n  handleSignout = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => console.log(\"signed out!\"));\n  };\n\n  render() {\n    const { user, modal, previewImage, croppedImage } = this.state;\n    const { primaryColor } = this.props;\n\n    return (\n      <Grid style={{ background: primaryColor }}>\n        <Grid.Column>\n          <Grid.Row style={{ padding: \"1.2em\", margin: 0 }}>\n            {/* App Header */}\n            <Header inverted floated=\"left\" as=\"h2\">\n              <Icon name=\"american sign language interpreting\" />\n              <Header.Content>ReKonnect</Header.Content>\n            </Header>\n\n            {/* User Dropdown  */}\n            <Header style={{ padding: \"0.25em\" }} as=\"h4\" inverted>\n              <Dropdown\n                trigger={\n                  <span>\n                    <Image src={user.photoURL} spaced=\"right\" avatar />\n                    {user.displayName}\n                  </span>\n                }\n                options={this.dropdownOptions()}\n              />\n            </Header>\n          </Grid.Row>\n\n          {/* Change User Avatar Modal   */}\n          <Modal basic open={modal} onClose={this.closeModal}>\n            <Modal.Header>Change Avatar</Modal.Header>\n            <Modal.Content>\n              <Input\n                onChange={this.handleChange}\n                fluid\n                type=\"file\"\n                label=\"New Avatar\"\n                name=\"previewImage\"\n              />\n              <Grid centered stackable columns={2}>\n                <Grid.Row centered>\n                  <Grid.Column className=\"ui center aligned grid\">\n                    {previewImage && (\n                      <AvatarEditor\n                        ref={(node) => (this.avatarEditor = node)}\n                        image={previewImage}\n                        width={120}\n                        height={120}\n                        border={50}\n                        scale={1.2}\n                      />\n                    )}\n                  </Grid.Column>\n                  <Grid.Column>\n                    {croppedImage && (\n                      <Image\n                        style={{ margin: \"3.5em auto\" }}\n                        width={100}\n                        height={100}\n                        src={croppedImage}\n                      />\n                    )}\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </Modal.Content>\n            <Modal.Actions>\n              {croppedImage && (\n                <Button\n                  color=\"green\"\n                  inverted\n                  onClick={this.uploadCroppedImage}\n                >\n                  <Icon name=\"save\" /> Change Avatar\n                </Button>\n              )}\n              <Button color=\"green\" inverted onClick={this.handleCropImage}>\n                <Icon name=\"image\" /> Preview\n              </Button>\n              <Button color=\"red\" inverted onClick={this.closeModal}>\n                <Icon name=\"remove\" /> Cancel\n              </Button>\n            </Modal.Actions>\n          </Modal>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default UserPanel;\n","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport { connect } from \"react-redux\";\nimport { setCurrentChannel, setPrivateChannel } from \"../../actions\";\n// prettier-ignore\nimport { Menu, Icon, Modal, Form, Input, Button, Label } from \"semantic-ui-react\";\n\nclass Channels extends React.Component {\n  state = {\n    activeChannel: \"\",\n    user: this.props.currentUser,\n    channel: null,\n    channels: [],\n    channelName: \"\",\n    channelDetails: \"\",\n    channelsRef: firebase.database().ref(\"channels\"),\n    messagesRef: firebase.database().ref(\"messages\"),\n    typingRef: firebase.database().ref(\"typing\"),\n    notifications: [],\n    modal: false,\n    firstLoad: true,\n  };\n\n  componentDidMount() {\n    this.addListeners();\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  addListeners = () => {\n    let loadedChannels = [];\n    this.state.channelsRef.on(\"child_added\", (snap) => {\n      loadedChannels.push(snap.val());\n      this.setState({ channels: loadedChannels }, () => this.setFirstChannel());\n      this.addNotificationListener(snap.key);\n    });\n  };\n\n  addNotificationListener = (channelId) => {\n    this.state.messagesRef.child(channelId).on(\"value\", (snap) => {\n      if (this.state.channel) {\n        this.handleNotifications(\n          channelId,\n          this.state.channel.id,\n          this.state.notifications,\n          snap\n        );\n      }\n    });\n  };\n\n  handleNotifications = (channelId, currentChannelId, notifications, snap) => {\n    let lastTotal = 0;\n\n    let index = notifications.findIndex(\n      (notification) => notification.id === channelId\n    );\n\n    if (index !== -1) {\n      if (channelId !== currentChannelId) {\n        lastTotal = notifications[index].total;\n\n        if (snap.numChildren() - lastTotal > 0) {\n          notifications[index].count = snap.numChildren() - lastTotal;\n        }\n      }\n      notifications[index].lastKnownTotal = snap.numChildren();\n    } else {\n      notifications.push({\n        id: channelId,\n        total: snap.numChildren(),\n        lastKnownTotal: snap.numChildren(),\n        count: 0,\n      });\n    }\n\n    this.setState({ notifications });\n  };\n\n  removeListeners = () => {\n    this.state.channelsRef.off();\n    this.state.channels.forEach((channel) => {\n      this.state.messagesRef.child(channel.id).off();\n    });\n  };\n\n  setFirstChannel = () => {\n    const firstChannel = this.state.channels[0];\n    if (this.state.firstLoad && this.state.channels.length > 0) {\n      this.props.setCurrentChannel(firstChannel);\n      this.setActiveChannel(firstChannel);\n      this.setState({ channel: firstChannel });\n    }\n    this.setState({ firstLoad: false });\n  };\n\n  addChannel = () => {\n    const { channelsRef, channelName, channelDetails, user } = this.state;\n\n    const key = channelsRef.push().key;\n\n    const newChannel = {\n      id: key,\n      name: channelName,\n      details: channelDetails,\n      createdBy: {\n        name: user.displayName,\n        avatar: user.photoURL,\n      },\n    };\n\n    channelsRef\n      .child(key)\n      .update(newChannel)\n      .then(() => {\n        this.setState({ channelName: \"\", channelDetails: \"\" });\n        this.closeModal();\n        console.log(\"channel added\");\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (this.isFormValid(this.state)) {\n      this.addChannel();\n    }\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  changeChannel = (channel) => {\n    this.setActiveChannel(channel);\n    this.state.typingRef\n      .child(this.state.channel.id)\n      .child(this.state.user.uid)\n      .remove();\n    this.clearNotifications();\n    this.props.setCurrentChannel(channel);\n    this.props.setPrivateChannel(false);\n    this.setState({ channel });\n  };\n\n  clearNotifications = () => {\n    let index = this.state.notifications.findIndex(\n      (notification) => notification.id === this.state.channel.id\n    );\n\n    if (index !== -1) {\n      let updatedNotifications = [...this.state.notifications];\n      updatedNotifications[index].total = this.state.notifications[\n        index\n      ].lastKnownTotal;\n      updatedNotifications[index].count = 0;\n      this.setState({ notifications: updatedNotifications });\n    }\n  };\n\n  setActiveChannel = (channel) => {\n    this.setState({ activeChannel: channel.id });\n  };\n\n  getNotificationCount = (channel) => {\n    let count = 0;\n\n    this.state.notifications.forEach((notification) => {\n      if (notification.id === channel.id) {\n        count = notification.count;\n      }\n    });\n\n    if (count > 0) return count;\n  };\n\n  displayChannels = (channels) =>\n    channels.length > 0 &&\n    channels.map((channel) => (\n      <Menu.Item\n        key={channel.id}\n        onClick={() => this.changeChannel(channel)}\n        name={channel.name}\n        style={{ opacity: 0.7 }}\n        active={channel.id === this.state.activeChannel}\n      >\n        {this.getNotificationCount(channel) && (\n          <Label color=\"red\">{this.getNotificationCount(channel)}</Label>\n        )}\n        # {channel.name}\n      </Menu.Item>\n    ));\n\n  isFormValid = ({ channelName, channelDetails }) =>\n    channelName && channelDetails;\n\n  openModal = () => this.setState({ modal: true });\n\n  closeModal = () => this.setState({ modal: false });\n\n  render() {\n    const { channels, modal } = this.state;\n\n    return (\n      <React.Fragment>\n        <Menu.Menu className=\"menu\">\n          <Menu.Item>\n            <span>\n              <Icon name=\"exchange\" /> CHANNELS\n            </span>{\" \"}\n            ({channels.length}) <Icon name=\"add\" onClick={this.openModal} />\n          </Menu.Item>\n          {this.displayChannels(channels)}\n        </Menu.Menu>\n\n        {/* Add Channel Modal */}\n        <Modal basic open={modal} onClose={this.closeModal}>\n          <Modal.Header>Add a Channel</Modal.Header>\n          <Modal.Content>\n            <Form onSubmit={this.handleSubmit}>\n              <Form.Field>\n                <Input\n                  fluid\n                  label=\"Name of Channel\"\n                  name=\"channelName\"\n                  onChange={this.handleChange}\n                />\n              </Form.Field>\n\n              <Form.Field>\n                <Input\n                  fluid\n                  label=\"About the Channel\"\n                  name=\"channelDetails\"\n                  onChange={this.handleChange}\n                />\n              </Form.Field>\n            </Form>\n          </Modal.Content>\n\n          <Modal.Actions>\n            <Button color=\"green\" inverted onClick={this.handleSubmit}>\n              <Icon name=\"checkmark\" /> Add\n            </Button>\n            <Button color=\"red\" inverted onClick={this.closeModal}>\n              <Icon name=\"remove\" /> Cancel\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(null, { setCurrentChannel, setPrivateChannel })(\n  Channels\n);\n","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport { connect } from \"react-redux\";\nimport { setCurrentChannel, setPrivateChannel } from \"../../actions\";\nimport { Menu, Icon } from \"semantic-ui-react\";\n\nclass DirectMessages extends React.Component {\n  state = {\n    activeChannel: \"\",\n    user: this.props.currentUser,\n    users: [],\n    usersRef: firebase.database().ref(\"users\"),\n    connectedRef: firebase.database().ref(\".info/connected\"),\n    presenceRef: firebase.database().ref(\"presence\"),\n  };\n\n  componentDidMount() {\n    if (this.state.user) {\n      this.addListeners(this.state.user.uid);\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  removeListeners = () => {\n    this.state.usersRef.off();\n    this.state.presenceRef.off();\n    this.state.connectedRef.off();\n  };\n\n  addListeners = (currentUserUid) => {\n    let loadedUsers = [];\n    this.state.usersRef.on(\"child_added\", (snap) => {\n      if (currentUserUid !== snap.key) {\n        let user = snap.val();\n        user[\"uid\"] = snap.key;\n        user[\"status\"] = \"offline\";\n        loadedUsers.push(user);\n        this.setState({ users: loadedUsers });\n      }\n    });\n\n    this.state.connectedRef.on(\"value\", (snap) => {\n      if (snap.val() === true) {\n        const ref = this.state.presenceRef.child(currentUserUid);\n        ref.set(true);\n        ref.onDisconnect().remove((err) => {\n          if (err !== null) {\n            console.error(err);\n          }\n        });\n      }\n    });\n\n    this.state.presenceRef.on(\"child_added\", (snap) => {\n      if (currentUserUid !== snap.key) {\n        this.addStatusToUser(snap.key);\n      }\n    });\n\n    this.state.presenceRef.on(\"child_removed\", (snap) => {\n      if (currentUserUid !== snap.key) {\n        this.addStatusToUser(snap.key, false);\n      }\n    });\n  };\n\n  addStatusToUser = (userId, connected = true) => {\n    const updatedUsers = this.state.users.reduce((acc, user) => {\n      if (user.uid === userId) {\n        user[\"status\"] = `${connected ? \"online\" : \"offline\"}`;\n      }\n      return acc.concat(user);\n    }, []);\n    this.setState({ users: updatedUsers });\n  };\n\n  isUserOnline = (user) => user.status === \"online\";\n\n  changeChannel = (user) => {\n    const channelId = this.getChannelId(user.uid);\n    const channelData = {\n      id: channelId,\n      name: user.name,\n    };\n    this.props.setCurrentChannel(channelData);\n    this.props.setPrivateChannel(true);\n    this.setActiveChannel(user.uid);\n  };\n\n  getChannelId = (userId) => {\n    const currentUserId = this.state.user.uid;\n    return userId < currentUserId\n      ? `${userId}/${currentUserId}`\n      : `${currentUserId}/${userId}`;\n  };\n\n  setActiveChannel = (userId) => {\n    this.setState({ activeChannel: userId });\n  };\n\n  render() {\n    const { users, activeChannel } = this.state;\n\n    return (\n      <Menu.Menu className=\"menu\">\n        <Menu.Item>\n          <span>\n            <Icon name=\"mail\" /> DIRECT MESSAGES\n          </span>{\" \"}\n          ({users.length})\n        </Menu.Item>\n        {users.map((user) => (\n          <Menu.Item\n            key={user.uid}\n            active={user.uid === activeChannel}\n            onClick={() => this.changeChannel(user)}\n            style={{ opacity: 0.7, fontStyle: \"italic\" }}\n          >\n            <Icon\n              name=\"circle\"\n              color={this.isUserOnline(user) ? \"green\" : \"red\"}\n            />\n            @ {user.name}\n          </Menu.Item>\n        ))}\n      </Menu.Menu>\n    );\n  }\n}\n\nexport default connect(null, { setCurrentChannel, setPrivateChannel })(\n  DirectMessages\n);\n","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport { connect } from \"react-redux\";\nimport { setCurrentChannel, setPrivateChannel } from \"../../actions\";\nimport { Menu, Icon } from \"semantic-ui-react\";\n\nclass Starred extends React.Component {\n  state = {\n    user: this.props.currentUser,\n    usersRef: firebase.database().ref(\"users\"),\n    activeChannel: \"\",\n    starredChannels: [],\n  };\n\n  componentDidMount() {\n    if (this.state.user) {\n      this.addListeners(this.state.user.uid);\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListener();\n  }\n\n  removeListener = () => {\n    this.state.usersRef.child(`${this.state.user.uid}/starred`).off();\n  };\n\n  addListeners = (userId) => {\n    this.state.usersRef\n      .child(userId)\n      .child(\"starred\")\n      .on(\"child_added\", (snap) => {\n        const starredChannel = { id: snap.key, ...snap.val() };\n        this.setState({\n          starredChannels: [...this.state.starredChannels, starredChannel],\n        });\n      });\n\n    this.state.usersRef\n      .child(userId)\n      .child(\"starred\")\n      .on(\"child_removed\", (snap) => {\n        const channelToRemove = { id: snap.key, ...snap.val() };\n        const filteredChannels = this.state.starredChannels.filter(\n          (channel) => {\n            return channel.id !== channelToRemove.id;\n          }\n        );\n        this.setState({ starredChannels: filteredChannels });\n      });\n  };\n\n  setActiveChannel = (channel) => {\n    this.setState({ activeChannel: channel.id });\n  };\n\n  changeChannel = (channel) => {\n    this.setActiveChannel(channel);\n    this.props.setCurrentChannel(channel);\n    this.props.setPrivateChannel(false);\n  };\n\n  displayChannels = (starredChannels) =>\n    starredChannels.length > 0 &&\n    starredChannels.map((channel) => (\n      <Menu.Item\n        key={channel.id}\n        onClick={() => this.changeChannel(channel)}\n        name={channel.name}\n        style={{ opacity: 0.7 }}\n        active={channel.id === this.state.activeChannel}\n      >\n        # {channel.name}\n      </Menu.Item>\n    ));\n\n  render() {\n    const { starredChannels } = this.state;\n\n    return (\n      <Menu.Menu className=\"menu\">\n        <Menu.Item>\n          <span>\n            <Icon name=\"star\" /> STARRED\n          </span>{\" \"}\n          ({starredChannels.length})\n        </Menu.Item>\n        {this.displayChannels(starredChannels)}\n      </Menu.Menu>\n    );\n  }\n}\n\nexport default connect(null, { setCurrentChannel, setPrivateChannel })(Starred);\n","import React from \"react\";\nimport { Menu } from \"semantic-ui-react\";\n\nimport UserPanel from \"./UserPanel\";\nimport Channels from \"./Channels\";\nimport DirectMessages from \"./DirectMessages\";\nimport Starred from \"./Starred\";\n\nclass SidePanel extends React.Component {\n  render() {\n    const { currentUser, primaryColor } = this.props;\n\n    return (\n      <Menu\n        size=\"large\"\n        inverted\n        fixed=\"left\"\n        vertical\n        style={{ background: primaryColor, fontSize: \"1.2rem\" }}\n      >\n        <UserPanel primaryColor={primaryColor} currentUser={currentUser} />\n        <Starred currentUser={currentUser} />\n        <Channels currentUser={currentUser} />\n        <DirectMessages currentUser={currentUser} />\n      </Menu>\n    );\n  }\n}\n\nexport default SidePanel;\n","import React from \"react\";\nimport { Header, Segment, Input, Icon } from \"semantic-ui-react\";\n\nclass MessagesHeader extends React.Component {\n  render() {\n    const {\n      channelName,\n      numUniqueUsers,\n      handleSearchChange,\n      searchLoading,\n      isPrivateChannel,\n      handleStar,\n      isChannelStarred,\n    } = this.props;\n\n    return (\n      <Segment clearing>\n        {/* Channel Title */}\n        <Header fluid=\"true\" as=\"h2\" floated=\"left\" style={{ marginBottom: 0 }}>\n          <span>\n            {channelName}\n            {!isPrivateChannel && (\n              <Icon\n                onClick={handleStar}\n                name={isChannelStarred ? \"star\" : \"star outline\"}\n                color={isChannelStarred ? \"yellow\" : \"black\"}\n              />\n            )}\n          </span>\n          <Header.Subheader>{numUniqueUsers}</Header.Subheader>\n        </Header>\n\n        {/* Channel Search Input */}\n        <Header floated=\"right\">\n          <Input\n            loading={searchLoading}\n            onChange={handleSearchChange}\n            size=\"mini\"\n            icon=\"search\"\n            name=\"searchTerm\"\n            placeholder=\"Search Messages\"\n          />\n        </Header>\n      </Segment>\n    );\n  }\n}\n\nexport default MessagesHeader;\n","import React from \"react\";\nimport mime from \"mime-types\";\nimport { Modal, Input, Button, Icon } from \"semantic-ui-react\";\n\nclass FileModal extends React.Component {\n  state = {\n    file: null,\n    authorized: [\"image/jpeg\", \"image/png\"],\n  };\n\n  addFile = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      this.setState({ file });\n    }\n  };\n\n  sendFile = () => {\n    const { file } = this.state;\n    const { uploadFile, closeModal } = this.props;\n\n    if (file !== null) {\n      if (this.isAuthorized(file.name)) {\n        const metadata = { contentType: mime.lookup(file.name) };\n        uploadFile(file, metadata);\n        closeModal();\n        this.clearFile();\n      }\n    }\n  };\n\n  isAuthorized = (filename) =>\n    this.state.authorized.includes(mime.lookup(filename));\n\n  clearFile = () => this.setState({ file: null });\n\n  render() {\n    const { modal, closeModal } = this.props;\n\n    return (\n      <Modal basic open={modal} onClose={closeModal}>\n        <Modal.Header>Select an Image File</Modal.Header>\n        <Modal.Content>\n          <Input\n            onChange={this.addFile}\n            fluid\n            label=\"File types: jpg, png\"\n            name=\"file\"\n            type=\"file\"\n          />\n        </Modal.Content>\n        <Modal.Actions>\n          <Button onClick={this.sendFile} color=\"green\" inverted>\n            <Icon name=\"checkmark\" /> Send\n          </Button>\n          <Button color=\"red\" inverted onClick={closeModal}>\n            <Icon name=\"remove\" /> Cancel\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nexport default FileModal;\n","import React from \"react\";\nimport { Progress } from \"semantic-ui-react\";\n\nconst ProgressBar = ({ uploadState, percentUploaded }) =>\n  uploadState === \"uploading\" && (\n    <Progress\n      className=\"progress__bar\"\n      percent={percentUploaded}\n      progress\n      indicating\n      size=\"medium\"\n      inverted\n    />\n  );\n\nexport default ProgressBar;\n","import React from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport firebase from \"../../firebase\";\nimport { Segment, Button, Input } from \"semantic-ui-react\";\nimport { Picker, emojiIndex } from \"emoji-mart\";\nimport \"emoji-mart/css/emoji-mart.css\";\n\nimport FileModal from \"./FileModal\";\nimport ProgressBar from \"./ProgressBar\";\n\nclass MessageForm extends React.Component {\n  state = {\n    storageRef: firebase.storage().ref(),\n    typingRef: firebase.database().ref(\"typing\"),\n    uploadTask: null,\n    uploadState: \"\",\n    percentUploaded: 0,\n    message: \"\",\n    channel: this.props.currentChannel,\n    user: this.props.currentUser,\n    loading: false,\n    errors: [],\n    modal: false,\n    emojiPicker: false,\n  };\n\n  componentWillUnmount() {\n    if (this.state.uploadTask !== null) {\n      this.state.uploadTask.cancel();\n      this.setState({ uploadTask: null });\n    }\n  }\n\n  openModal = () => this.setState({ modal: true });\n\n  closeModal = () => this.setState({ modal: false });\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleKeyDown = (event) => {\n    if (event.keyCode === 13) {\n      this.sendMessage();\n    }\n\n    const { message, typingRef, channel, user } = this.state;\n\n    if (message) {\n      typingRef.child(channel.id).child(user.uid).set(user.displayName);\n    } else {\n      typingRef.child(channel.id).child(user.uid).remove();\n    }\n  };\n\n  handleTogglePicker = () => {\n    this.setState({ emojiPicker: !this.state.emojiPicker });\n  };\n\n  handleAddEmoji = (emoji) => {\n    const oldMessage = this.state.message;\n    const newMessage = this.colonToUnicode(` ${oldMessage} ${emoji.colons} `);\n    this.setState({ message: newMessage, emojiPicker: false });\n    setTimeout(() => this.messageInputRef.focus(), 0);\n  };\n\n  colonToUnicode = (message) => {\n    return message.replace(/:[A-Za-z0-9_+-]+:/g, (x) => {\n      x = x.replace(/:/g, \"\");\n      let emoji = emojiIndex.emojis[x];\n      if (typeof emoji !== \"undefined\") {\n        let unicode = emoji.native;\n        if (typeof unicode !== \"undefined\") {\n          return unicode;\n        }\n      }\n      x = \":\" + x + \":\";\n      return x;\n    });\n  };\n\n  createMessage = (fileUrl = null) => {\n    const message = {\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\n      user: {\n        id: this.state.user.uid,\n        name: this.state.user.displayName,\n        avatar: this.state.user.photoURL,\n      },\n    };\n    if (fileUrl !== null) {\n      message[\"image\"] = fileUrl;\n    } else {\n      message[\"content\"] = this.state.message;\n    }\n    return message;\n  };\n\n  sendMessage = () => {\n    const { getMessagesRef } = this.props;\n    const { message, channel, user, typingRef } = this.state;\n\n    if (message) {\n      this.setState({ loading: true });\n      getMessagesRef()\n        .child(channel.id)\n        .push()\n        .set(this.createMessage())\n        .then(() => {\n          this.setState({ loading: false, message: \"\", errors: [] });\n          typingRef.child(channel.id).child(user.uid).remove();\n        })\n        .catch((err) => {\n          console.error(err);\n          this.setState({\n            loading: false,\n            errors: this.state.errors.concat(err),\n          });\n        });\n    } else {\n      this.setState({\n        errors: this.state.errors.concat({ message: \"Add a message\" }),\n      });\n    }\n  };\n\n  getPath = () => {\n    if (this.props.isPrivateChannel) {\n      return `chat/private/${this.state.channel.id}`;\n    } else {\n      return \"chat/public\";\n    }\n  };\n\n  uploadFile = (file, metadata) => {\n    const pathToUpload = this.state.channel.id;\n    const ref = this.props.getMessagesRef();\n    const filePath = `${this.getPath()}/${uuid()}.jpg`;\n\n    this.setState(\n      {\n        uploadState: \"uploading\",\n        uploadTask: this.state.storageRef.child(filePath).put(file, metadata),\n      },\n      () => {\n        this.state.uploadTask.on(\n          \"state_changed\",\n          (snap) => {\n            const percentUploaded = Math.round(\n              (snap.bytesTransferred / snap.totalBytes) * 100\n            );\n            this.setState({ percentUploaded });\n          },\n          (err) => {\n            console.error(err);\n            this.setState({\n              errors: this.state.errors.concat(err),\n              uploadState: \"error\",\n              uploadTask: null,\n            });\n          },\n          () => {\n            this.state.uploadTask.snapshot.ref\n              .getDownloadURL()\n              .then((downloadUrl) => {\n                this.sendFileMessage(downloadUrl, ref, pathToUpload);\n              })\n              .catch((err) => {\n                console.error(err);\n                this.setState({\n                  errors: this.state.errors.concat(err),\n                  uploadState: \"error\",\n                  uploadTask: null,\n                });\n              });\n          }\n        );\n      }\n    );\n  };\n\n  sendFileMessage = (fileUrl, ref, pathToUpload) => {\n    ref\n      .child(pathToUpload)\n      .push()\n      .set(this.createMessage(fileUrl))\n      .then(() => {\n        this.setState({ uploadState: \"done\" });\n      })\n      .catch((err) => {\n        console.error(err);\n        this.setState({\n          errors: this.state.errors.concat(err),\n        });\n      });\n  };\n\n  render() {\n    // prettier-ignore\n    const { errors, message, loading, modal, uploadState, percentUploaded, emojiPicker } = this.state;\n\n    return (\n      <Segment className=\"message__form\">\n        {emojiPicker && (\n          <Picker\n            set=\"apple\"\n            onSelect={this.handleAddEmoji}\n            className=\"emojipicker\"\n            title=\"Pick your emoji\"\n            emoji=\"point_up\"\n          />\n        )}\n        <Input\n          fluid\n          name=\"message\"\n          onChange={this.handleChange}\n          onKeyDown={this.handleKeyDown}\n          value={message}\n          ref={(node) => (this.messageInputRef = node)}\n          style={{ marginBottom: \"0.7em\" }}\n          label={\n            <Button\n              icon={emojiPicker ? \"close\" : \"add\"}\n              content={emojiPicker ? \"Close\" : null}\n              onClick={this.handleTogglePicker}\n            />\n          }\n          labelPosition=\"left\"\n          className={\n            errors.some((error) => error.message.includes(\"message\"))\n              ? \"error\"\n              : \"\"\n          }\n          placeholder=\"Write your message\"\n        />\n        <Button.Group icon widths=\"2\">\n          <Button\n            onClick={this.sendMessage}\n            disabled={loading}\n            color=\"orange\"\n            content=\"Add Reply\"\n            labelPosition=\"left\"\n            icon=\"edit\"\n          />\n          <Button\n            color=\"teal\"\n            disabled={uploadState === \"uploading\"}\n            onClick={this.openModal}\n            content=\"Upload Media\"\n            labelPosition=\"right\"\n            icon=\"cloud upload\"\n          />\n        </Button.Group>\n        <FileModal\n          modal={modal}\n          closeModal={this.closeModal}\n          uploadFile={this.uploadFile}\n        />\n        <ProgressBar\n          uploadState={uploadState}\n          percentUploaded={percentUploaded}\n        />\n      </Segment>\n    );\n  }\n}\n\nexport default MessageForm;\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Comment, Image } from \"semantic-ui-react\";\n\nconst isOwnMessage = (message, user) => {\n  return message.user.id === user.uid ? \"message__self\" : \"\";\n};\n\nconst isImage = (message) => {\n  return message.hasOwnProperty(\"image\") && !message.hasOwnProperty(\"content\");\n};\n\nconst timeFromNow = (timestamp) => moment(timestamp).fromNow();\n\nconst Message = ({ message, user }) => (\n  <Comment>\n    <Comment.Avatar src={message.user.avatar} />\n    <Comment.Content className={isOwnMessage(message, user)}>\n      <Comment.Author as=\"a\">{message.user.name}</Comment.Author>\n      <Comment.Metadata>{timeFromNow(message.timestamp)}</Comment.Metadata>\n      {isImage(message) ? (\n        <Image src={message.image} className=\"message__image\" />\n      ) : (\n        <Comment.Text>{message.content}</Comment.Text>\n      )}\n    </Comment.Content>\n  </Comment>\n);\n\nexport default Message;\n","import React from \"react\";\n\nconst Typing = () => (\n  <div className=\"typing\">\n    <div className=\"typing__dot\"></div>\n    <div className=\"typing__dot\"></div>\n    <div className=\"typing__dot\"></div>\n  </div>\n);\n\nexport default Typing;\n","import React from \"react\";\n\nconst Skeleton = () => (\n  <div className=\"skeleton\">\n    <div className=\"skeleton__avatar\" />\n    <div className=\"skeleton__author\" />\n    <div className=\"skeleton__details\" />\n  </div>\n);\n\nexport default Skeleton;\n","import React from \"react\";\nimport { Segment, Comment } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { setUserPosts } from \"../../actions\";\nimport firebase from \"../../firebase\";\n\nimport MessagesHeader from \"./MessagesHeader\";\nimport MessageForm from \"./MessageForm\";\nimport Message from \"./Message\";\nimport Typing from \"./Typing\";\nimport Skeleton from \"./Skeleton\";\n\nclass Messages extends React.Component {\n  state = {\n    privateChannel: this.props.isPrivateChannel,\n    privateMessagesRef: firebase.database().ref(\"privateMessages\"),\n    messagesRef: firebase.database().ref(\"messages\"),\n    messages: [],\n    messagesLoading: true,\n    channel: this.props.currentChannel,\n    isChannelStarred: false,\n    user: this.props.currentUser,\n    usersRef: firebase.database().ref(\"users\"),\n    numUniqueUsers: \"\",\n    searchTerm: \"\",\n    searchLoading: false,\n    searchResults: [],\n    typingRef: firebase.database().ref(\"typing\"),\n    typingUsers: [],\n    connectedRef: firebase.database().ref(\".info/connected\"),\n    listeners: [],\n  };\n\n  componentDidMount() {\n    const { channel, user, listeners } = this.state;\n\n    if (channel && user) {\n      this.removeListeners(listeners);\n      this.addListeners(channel.id);\n      this.addUserStarsListener(channel.id, user.uid);\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners(this.state.listeners);\n    this.state.connectedRef.off();\n  }\n\n  removeListeners = (listeners) => {\n    listeners.forEach((listener) => {\n      listener.ref.child(listener.id).off(listener.event);\n    });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesEnd) {\n      this.scrollToBottom();\n    }\n  }\n\n  addToListeners = (id, ref, event) => {\n    const index = this.state.listeners.findIndex((listener) => {\n      return (\n        listener.id === id && listener.ref === ref && listener.event === event\n      );\n    });\n\n    if (index === -1) {\n      const newListener = { id, ref, event };\n      this.setState({ listeners: this.state.listeners.concat(newListener) });\n    }\n  };\n\n  scrollToBottom = () => {\n    this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  addListeners = (channelId) => {\n    this.addMessageListener(channelId);\n    this.addTypingListeners(channelId);\n  };\n\n  addTypingListeners = (channelId) => {\n    let typingUsers = [];\n    this.state.typingRef.child(channelId).on(\"child_added\", (snap) => {\n      if (snap.key !== this.state.user.uid) {\n        typingUsers = typingUsers.concat({\n          id: snap.key,\n          name: snap.val(),\n        });\n        this.setState({ typingUsers });\n      }\n    });\n    this.addToListeners(channelId, this.state.typingRef, \"child_added\");\n\n    this.state.typingRef.child(channelId).on(\"child_removed\", (snap) => {\n      const index = typingUsers.findIndex((user) => user.id === snap.key);\n      if (index !== -1) {\n        typingUsers = typingUsers.filter((user) => user.id !== snap.key);\n        this.setState({ typingUsers });\n      }\n    });\n    this.addToListeners(channelId, this.state.typingRef, \"child_removed\");\n\n    this.state.connectedRef.on(\"value\", (snap) => {\n      if (snap.val() === true) {\n        this.state.typingRef\n          .child(channelId)\n          .child(this.state.user.uid)\n          .onDisconnect()\n          .remove((err) => {\n            if (err !== null) {\n              console.error(err);\n            }\n          });\n      }\n    });\n  };\n\n  addMessageListener = (channelId) => {\n    let loadedMessages = [];\n    const ref = this.getMessagesRef();\n    ref.child(channelId).on(\"child_added\", (snap) => {\n      loadedMessages.push(snap.val());\n      this.setState({\n        messages: loadedMessages,\n        messagesLoading: false,\n      });\n      this.countUniqueUsers(loadedMessages);\n      this.countUserPosts(loadedMessages);\n    });\n    this.addToListeners(channelId, ref, \"child_added\");\n  };\n\n  addUserStarsListener = (channelId, userId) => {\n    this.state.usersRef\n      .child(userId)\n      .child(\"starred\")\n      .once(\"value\")\n      .then((data) => {\n        if (data.val() !== null) {\n          const channelIds = Object.keys(data.val());\n          const prevStarred = channelIds.includes(channelId);\n          this.setState({ isChannelStarred: prevStarred });\n        }\n      });\n  };\n\n  getMessagesRef = () => {\n    const { messagesRef, privateMessagesRef, privateChannel } = this.state;\n    return privateChannel ? privateMessagesRef : messagesRef;\n  };\n\n  handleStar = () => {\n    this.setState(\n      (prevState) => ({\n        isChannelStarred: !prevState.isChannelStarred,\n      }),\n      () => this.starChannel()\n    );\n  };\n\n  starChannel = () => {\n    if (this.state.isChannelStarred) {\n      this.state.usersRef.child(`${this.state.user.uid}/starred`).update({\n        [this.state.channel.id]: {\n          name: this.state.channel.name,\n          details: this.state.channel.details,\n          createdBy: {\n            name: this.state.channel.createdBy.name,\n            avatar: this.state.channel.createdBy.avatar,\n          },\n        },\n      });\n    } else {\n      this.state.usersRef\n        .child(`${this.state.user.uid}/starred`)\n        .child(this.state.channel.id)\n        .remove((err) => {\n          if (err !== null) {\n            console.error(err);\n          }\n        });\n    }\n  };\n\n  handleSearchChange = (event) => {\n    this.setState(\n      {\n        searchTerm: event.target.value,\n        searchLoading: true,\n      },\n      () => this.handleSearchMessages()\n    );\n  };\n\n  handleSearchMessages = () => {\n    const channelMessages = [...this.state.messages];\n    const regex = new RegExp(this.state.searchTerm, \"gi\");\n    const searchResults = channelMessages.reduce((acc, message) => {\n      if (\n        (message.content && message.content.match(regex)) ||\n        message.user.name.match(regex)\n      ) {\n        acc.push(message);\n      }\n      return acc;\n    }, []);\n    this.setState({ searchResults });\n    setTimeout(() => this.setState({ searchLoading: false }), 1000);\n  };\n\n  countUniqueUsers = (messages) => {\n    const uniqueUsers = messages.reduce((acc, message) => {\n      if (!acc.includes(message.user.name)) {\n        acc.push(message.user.name);\n      }\n      return acc;\n    }, []);\n    const plural = uniqueUsers.length > 1 || uniqueUsers.length === 0;\n    const numUniqueUsers = `${uniqueUsers.length} user${plural ? \"s\" : \"\"}`;\n    this.setState({ numUniqueUsers });\n  };\n\n  countUserPosts = (messages) => {\n    let userPosts = messages.reduce((acc, message) => {\n      if (message.user.name in acc) {\n        acc[message.user.name].count += 1;\n      } else {\n        acc[message.user.name] = {\n          avatar: message.user.avatar,\n          count: 1,\n        };\n      }\n      return acc;\n    }, {});\n    this.props.setUserPosts(userPosts);\n  };\n\n  displayMessages = (messages) =>\n    messages.length > 0 &&\n    messages.map((message) => (\n      <Message\n        key={message.timestamp}\n        message={message}\n        user={this.state.user}\n      />\n    ));\n\n  displayChannelName = (channel) => {\n    return channel\n      ? `${this.state.privateChannel ? \"@\" : \"#\"}${channel.name}`\n      : \"\";\n  };\n\n  displayTypingUsers = (users) =>\n    users.length > 0 &&\n    users.map((user) => (\n      <div\n        style={{ display: \"flex\", alignItems: \"center\", marginBottom: \"0.2em\" }}\n        key={user.id}\n      >\n        <span className=\"user__typing\">{user.name} is typing</span> <Typing />\n      </div>\n    ));\n\n  displayMessageSkeleton = (loading) =>\n    loading ? (\n      <React.Fragment>\n        {[...Array(10)].map((_, i) => (\n          <Skeleton key={i} />\n        ))}\n      </React.Fragment>\n    ) : null;\n\n  render() {\n    // prettier-ignore\n    const { messagesRef, messages, channel, user, numUniqueUsers, searchTerm, searchResults, searchLoading, privateChannel, isChannelStarred, typingUsers, messagesLoading } = this.state;\n\n    return (\n      <React.Fragment>\n        <MessagesHeader\n          channelName={this.displayChannelName(channel)}\n          numUniqueUsers={numUniqueUsers}\n          handleSearchChange={this.handleSearchChange}\n          searchLoading={searchLoading}\n          isPrivateChannel={privateChannel}\n          handleStar={this.handleStar}\n          isChannelStarred={isChannelStarred}\n        />\n\n        <Segment>\n          <Comment.Group className=\"messages\">\n            {this.displayMessageSkeleton(messagesLoading)}\n            {searchTerm\n              ? this.displayMessages(searchResults)\n              : this.displayMessages(messages)}\n            {this.displayTypingUsers(typingUsers)}\n            <div ref={(node) => (this.messagesEnd = node)} />\n          </Comment.Group>\n        </Segment>\n\n        <MessageForm\n          messagesRef={messagesRef}\n          currentChannel={channel}\n          currentUser={user}\n          isPrivateChannel={privateChannel}\n          getMessagesRef={this.getMessagesRef}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(null, { setUserPosts })(Messages);\n","import React from \"react\";\nimport {\n  Segment,\n  Accordion,\n  Header,\n  Icon,\n  Image,\n  List,\n} from \"semantic-ui-react\";\n\nclass MetaPanel extends React.Component {\n  state = {\n    channel: this.props.currentChannel,\n    privateChannel: this.props.isPrivateChannel,\n    activeIndex: 0,\n  };\n\n  setActiveIndex = (event, titleProps) => {\n    const { index } = titleProps;\n    const { activeIndex } = this.state;\n    const newIndex = activeIndex === index ? -1 : index;\n    this.setState({ activeIndex: newIndex });\n  };\n\n  formatCount = (num) =>\n    num > 1 || num === 0 ? `${num} posts` : `${num} post`;\n\n  displayTopPosters = (posts) =>\n    Object.entries(posts)\n      .sort((a, b) => b[1] - a[1])\n      .map(([key, val], i) => (\n        <List.Item key={i}>\n          <Image avatar src={val.avatar} />\n          <List.Content>\n            <List.Header as=\"a\">{key}</List.Header>\n            <List.Description>{this.formatCount(val.count)}</List.Description>\n          </List.Content>\n        </List.Item>\n      ))\n      .slice(0, 5);\n\n  render() {\n    const { activeIndex, privateChannel, channel } = this.state;\n    const { userPosts } = this.props;\n\n    if (privateChannel) return null;\n\n    return (\n      <Segment loading={!channel}>\n        <Header as=\"h3\" attached=\"top\">\n          About # {channel && channel.name}\n        </Header>\n        <Accordion styled attached=\"true\">\n          <Accordion.Title\n            active={activeIndex === 0}\n            index={0}\n            onClick={this.setActiveIndex}\n          >\n            <Icon name=\"dropdown\" />\n            <Icon name=\"info\" />\n            Channel Details\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === 0}>\n            {channel && channel.details}\n          </Accordion.Content>\n\n          <Accordion.Title\n            active={activeIndex === 1}\n            index={1}\n            onClick={this.setActiveIndex}\n          >\n            <Icon name=\"dropdown\" />\n            <Icon name=\"user circle\" />\n            Top Posters\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === 1}>\n            <List>{userPosts && this.displayTopPosters(userPosts)}</List>\n          </Accordion.Content>\n\n          <Accordion.Title\n            active={activeIndex === 2}\n            index={2}\n            onClick={this.setActiveIndex}\n          >\n            <Icon name=\"dropdown\" />\n            <Icon name=\"pencil alternate\" />\n            Created By\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === 2}>\n            <Header as=\"h3\">\n              <Image circular src={channel && channel.createdBy.avatar} />\n              {channel && channel.createdBy.name}\n            </Header>\n          </Accordion.Content>\n        </Accordion>\n      </Segment>\n    );\n  }\n}\n\nexport default MetaPanel;\n","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router\";\n\nimport { Jutsu } from \"react-jutsu\";\nimport { setBypass } from \"../../actions\";\n\nimport {\n  Grid,\n  Form,\n  Segment,\n  Button,\n  Header,\n  Message,\n  Icon,\n} from \"semantic-ui-react\";\n\nconst VideoCalling = ({ history }) => {\n  const [room, setRoom] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [call, setCall] = useState(false);\n  const [password, setPassword] = useState(\"\");\n\n  const handleClick = (event) => {\n    event.preventDefault();\n    if (room && name) setCall(true);\n  };\n\n  const goBack = () => {\n    setBypass(false);\n    history.push(\"/\");\n    console.log(\"working\", history);\n  };\n\n  return call ? (\n    <Jutsu\n      roomName={room}\n      displayName={name}\n      password={password}\n      onMeetingEnd={() => goBack()}\n      loadingComponent={<p>loading ...</p>}\n      containerStyles={{ width: \"100vw\", height: \"100vh\" }}\n    />\n  ) : (\n    <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h1\" icon color=\"blue\" textAlign=\"center\">\n          <Icon name=\"video\" color=\"blue\" />\n          Enter Room Info\n        </Header>\n        <Form size=\"large\">\n          <Segment stacked>\n            <Form.Input\n              fluid\n              id=\"room\"\n              icon=\"warehouse\"\n              iconPosition=\"left\"\n              placeholder=\"Room\"\n              onChange={(e) => setRoom(e.target.value)}\n              value={room}\n              type=\"text\"\n            />\n\n            <Form.Input\n              fluid\n              id=\"name\"\n              icon=\"user\"\n              iconPosition=\"left\"\n              placeholder=\"Name\"\n              onChange={(e) => setName(e.target.value)}\n              value={name}\n              type=\"text\"\n            />\n\n            <Form.Input\n              fluid\n              id=\"password\"\n              icon=\"lock\"\n              iconPosition=\"left\"\n              placeholder=\"Password (optional)\"\n              onChange={(e) => setPassword(e.target.value)}\n              value={password}\n              type=\"password\"\n            />\n\n            <Button\n              color=\"blue\"\n              fluid\n              size=\"large\"\n              onClick={handleClick}\n              type=\"submit\"\n            >\n              Start / Join\n            </Button>\n          </Segment>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default withRouter(VideoCalling);\n","import React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport \"./App.css\";\nimport { connect } from \"react-redux\";\nimport { setBypass } from \"../actions\";\n\nimport ColorPanel from \"./ColorPanel/ColorPanel\";\nimport SidePanel from \"./SidePanel/SidePanel\";\nimport Messages from \"./Messages/Messages\";\nimport MetaPanel from \"./MetaPanel/MetaPanel\";\nimport VideoCalling from \"./VideoCalling/VideoCalling\";\n\nimport { Icon, Header } from \"semantic-ui-react\";\n\n// prettier-ignore\nconst App = ({ currentUser, currentChannel, isPrivateChannel, userPosts, primaryColor, secondaryColor, history }) => {\n    const callRoute = () => {\n      setBypass(true);\n      history.push(\"/video\");\n    };\n  return (\n  <Grid columns=\"equal\" className=\"app\" style={{ background: secondaryColor }}>\n    <ColorPanel\n      key={currentUser && currentUser.name}\n      currentUser={currentUser}\n    />\n    <SidePanel\n      key={currentUser && currentUser.uid}\n      currentUser={currentUser}\n      primaryColor={primaryColor}\n    />\n\n    <Grid.Column style={{ marginLeft: 320 }}>\n      <Messages\n        key={currentChannel && currentChannel.id}\n        currentChannel={currentChannel}\n        currentUser={currentUser}\n        isPrivateChannel={isPrivateChannel}\n      />\n    </Grid.Column>\n\n    <Grid.Column width={4}>\n      <MetaPanel\n        key={currentChannel && currentChannel.name}\n        userPosts={userPosts}\n        currentChannel={currentChannel}\n        isPrivateChannel={isPrivateChannel}\n      />\n      <Header as=\"h2\" onClick={callRoute} className='cursor'>\n              <Icon name=\"video\" />\n              <Header.Content>Video Calling</Header.Content>\n      </Header>\n    </Grid.Column>\n  </Grid>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.user.currentUser,\n  currentChannel: state.channel.currentChannel,\n  isPrivateChannel: state.channel.isPrivateChannel,\n  userPosts: state.channel.userPosts,\n  primaryColor: state.colors.primaryColor,\n  secondaryColor: state.colors.secondaryColor,\n});\n\nexport default connect(mapStateToProps)(App);\n","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport {\n  Grid,\n  Form,\n  Segment,\n  Button,\n  Header,\n  Message,\n  Icon,\n} from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    errors: [],\n    loading: false,\n  };\n\n  displayErrors = (errors) =>\n    errors.map((error, i) => <p key={i}>{error.message}</p>);\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (this.isFormValid(this.state)) {\n      this.setState({ errors: [], loading: true });\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(this.state.email, this.state.password)\n        .then((signedInUser) => {\n          console.log(signedInUser);\n        })\n        .catch((err) => {\n          console.error(err);\n          this.setState({\n            errors: this.state.errors.concat(err),\n            loading: false,\n          });\n        });\n    }\n  };\n\n  isFormValid = ({ email, password }) => email && password;\n\n  handleInputError = (errors, inputName) => {\n    return errors.some((error) =>\n      error.message.toLowerCase().includes(inputName)\n    )\n      ? \"error\"\n      : \"\";\n  };\n\n  render() {\n    const { email, password, errors, loading } = this.state;\n\n    return (\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h1\" icon color=\"violet\" textAlign=\"center\">\n            <Icon name=\"code branch\" color=\"violet\" />\n            Login to ReKonnect\n          </Header>\n          <Form onSubmit={this.handleSubmit} size=\"large\">\n            <Segment stacked>\n              <Form.Input\n                fluid\n                name=\"email\"\n                icon=\"mail\"\n                iconPosition=\"left\"\n                placeholder=\"Email Address\"\n                onChange={this.handleChange}\n                value={email}\n                className={this.handleInputError(errors, \"email\")}\n                type=\"email\"\n              />\n\n              <Form.Input\n                fluid\n                name=\"password\"\n                icon=\"lock\"\n                iconPosition=\"left\"\n                placeholder=\"Password\"\n                onChange={this.handleChange}\n                value={password}\n                className={this.handleInputError(errors, \"password\")}\n                type=\"password\"\n              />\n\n              <Button\n                disabled={loading}\n                className={loading ? \"loading\" : \"\"}\n                color=\"violet\"\n                fluid\n                size=\"large\"\n              >\n                Submit\n              </Button>\n            </Segment>\n          </Form>\n          {errors.length > 0 && (\n            <Message error>\n              <h3>Error</h3>\n              {this.displayErrors(errors)}\n            </Message>\n          )}\n          <Message>\n            Don't have an account? <Link to=\"/register\">Register</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport md5 from \"md5\";\nimport {\n  Grid,\n  Form,\n  Segment,\n  Button,\n  Header,\n  Message,\n  Icon,\n} from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nclass Register extends React.Component {\n  state = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirmation: \"\",\n    errors: [],\n    loading: false,\n    usersRef: firebase.database().ref(\"users\"),\n  };\n\n  isFormValid = () => {\n    let errors = [];\n    let error;\n\n    if (this.isFormEmpty(this.state)) {\n      error = { message: \"Fill in all fields\" };\n      this.setState({ errors: errors.concat(error) });\n      return false;\n    } else if (!this.isPasswordValid(this.state)) {\n      error = { message: \"Password is invalid\" };\n      this.setState({ errors: errors.concat(error) });\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  isFormEmpty = ({ username, email, password, passwordConfirmation }) => {\n    return (\n      !username.length ||\n      !email.length ||\n      !password.length ||\n      !passwordConfirmation.length\n    );\n  };\n\n  isPasswordValid = ({ password, passwordConfirmation }) => {\n    if (password.length < 6 || passwordConfirmation.length < 6) {\n      return false;\n    } else if (password !== passwordConfirmation) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  displayErrors = (errors) =>\n    errors.map((error, i) => <p key={i}>{error.message}</p>);\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({ errors: [], loading: true });\n    if (this.isFormValid()) {\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(this.state.email, this.state.password)\n        .then((createdUser) => {\n          console.log(createdUser);\n          createdUser.user\n            .updateProfile({\n              displayName: this.state.username,\n              photoURL: `http://gravatar.com/avatar/${md5(\n                createdUser.user.email\n              )}?d=identicon`,\n            })\n            .then(() => {\n              this.saveUser(createdUser).then(() => {\n                console.log(\"user saved\");\n              });\n              this.setState({ errors: [], loading: false });\n            })\n            .catch((err) => {\n              console.error(err);\n              this.setState({\n                errors: this.state.errors.concat(err),\n                loading: false,\n              });\n            });\n        })\n        .catch((err) => {\n          console.error(err);\n          this.setState({\n            errors: this.state.errors.concat(err),\n            loading: false,\n          });\n        });\n    }\n  };\n\n  saveUser = (createdUser) => {\n    return this.state.usersRef.child(createdUser.user.uid).set({\n      name: createdUser.user.displayName,\n      avatar: createdUser.user.photoURL,\n    });\n  };\n\n  handleInputError = (errors, inputName) => {\n    return errors.some((error) =>\n      error.message.toLowerCase().includes(inputName)\n    )\n      ? \"error\"\n      : \"\";\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      password,\n      passwordConfirmation,\n      errors,\n      loading,\n    } = this.state;\n\n    return (\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h1\" icon color=\"orange\" textAlign=\"center\">\n            <Icon name=\"puzzle piece\" color=\"orange\" />\n            Register for ReKonnect\n          </Header>\n          <Form onSubmit={this.handleSubmit} size=\"large\">\n            <Segment stacked>\n              <Form.Input\n                fluid\n                name=\"username\"\n                icon=\"user\"\n                iconPosition=\"left\"\n                placeholder=\"Username\"\n                onChange={this.handleChange}\n                value={username}\n                type=\"text\"\n              />\n\n              <Form.Input\n                fluid\n                name=\"email\"\n                icon=\"mail\"\n                iconPosition=\"left\"\n                placeholder=\"Email Address\"\n                onChange={this.handleChange}\n                value={email}\n                className={this.handleInputError(errors, \"email\")}\n                type=\"email\"\n              />\n\n              <Form.Input\n                fluid\n                name=\"password\"\n                icon=\"lock\"\n                iconPosition=\"left\"\n                placeholder=\"Password\"\n                onChange={this.handleChange}\n                value={password}\n                className={this.handleInputError(errors, \"password\")}\n                type=\"password\"\n              />\n\n              <Form.Input\n                fluid\n                name=\"passwordConfirmation\"\n                icon=\"repeat\"\n                iconPosition=\"left\"\n                placeholder=\"Password Confirmation\"\n                onChange={this.handleChange}\n                value={passwordConfirmation}\n                className={this.handleInputError(errors, \"password\")}\n                type=\"password\"\n              />\n\n              <Button\n                disabled={loading}\n                className={loading ? \"loading\" : \"\"}\n                color=\"orange\"\n                fluid\n                size=\"large\"\n              >\n                Submit\n              </Button>\n            </Segment>\n          </Form>\n          {errors.length > 0 && (\n            <Message error>\n              <h3>Error</h3>\n              {this.displayErrors(errors)}\n            </Message>\n          )}\n          <Message>\n            Already a user? <Link to=\"/login\">Login</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default Register;\n","import React from \"react\";\nimport { Loader, Dimmer } from \"semantic-ui-react\";\n\nconst Spinner = () => (\n  <Dimmer active>\n    <Loader size=\"huge\" content={\"Preparing Chat...\"} />\n  </Dimmer>\n);\n\nexport default Spinner;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport * as actionTypes from \"../actions/types\";\n\nconst initialUserState = {\n  currentUser: null,\n  isLoading: true,\n  bypass: false,\n};\n\nconst user_reducer = (state = initialUserState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_USER:\n      return {\n        currentUser: action.payload.currentUser,\n        isLoading: false,\n      };\n    case actionTypes.CLEAR_USER:\n      return {\n        ...state,\n        isLoading: false,\n      };\n    case actionTypes.SET_BYPASS:\n      return {\n        ...state,\n        bypass: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nconst initialChannelState = {\n  currentChannel: null,\n  isPrivateChannel: false,\n  userPosts: null,\n};\n\nconst channel_reducer = (state = initialChannelState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_CURRENT_CHANNEL:\n      return {\n        ...state,\n        currentChannel: action.payload.currentChannel,\n      };\n    case actionTypes.SET_PRIVATE_CHANNEL:\n      return {\n        ...state,\n        isPrivateChannel: action.payload.isPrivateChannel,\n      };\n    case actionTypes.SET_USER_POSTS:\n      return {\n        ...state,\n        userPosts: action.payload.userPosts,\n      };\n    default:\n      return state;\n  }\n};\n\nconst initialColorsState = {\n  primaryColor: \"#181D31\",\n  secondaryColor: \"#eee\",\n};\n\nconst colors_reducer = (state = initialColorsState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_COLORS:\n      return {\n        primaryColor: action.payload.primaryColor,\n        secondaryColor: action.payload.secondaryColor,\n      };\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  user: user_reducer,\n  channel: channel_reducer,\n  colors: colors_reducer,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport Login from \"./components/Auth/Login\";\nimport Register from \"./components/Auth/Register\";\nimport Spinner from \"./Spinner\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport firebase from \"./firebase\";\n\nimport \"semantic-ui-css/semantic.min.css\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  withRouter,\n} from \"react-router-dom\";\n\nimport { createStore } from \"redux\";\nimport { Provider, connect } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers\";\nimport { setUser, clearUser } from \"./actions\";\nimport VideoCalling from \"./components/VideoCalling/VideoCalling\";\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nclass Root extends React.Component {\n  componentDidMount() {\n    console.log(\"bypass\", this.props.bypass);\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user && !this.props.bypass) {\n        this.props.setUser(user);\n        this.props.history.push(\"/\");\n      } else {\n        this.props.history.push(\"/login\");\n        this.props.clearUser();\n      }\n    });\n  }\n\n  render() {\n    return this.props.isLoading ? (\n      <Spinner />\n    ) : (\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/register\" component={Register} />\n        <Route\n          path=\"/video\"\n          component={() => <VideoCalling bypass={this.props.bypass} />}\n        />\n      </Switch>\n    );\n  }\n}\n\nconst mapStateFromProps = (state) => ({\n  isLoading: state.user.isLoading,\n  bypass: state.user.bypass,\n});\n\nconst RootWithAuth = withRouter(\n  connect(mapStateFromProps, { setUser, clearUser })(Root)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <RootWithAuth />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}